{"version":3,"sources":["AdaptiveApp.js","index.js","App/CustomComponents/FormComponents/FormButton.js","App/CustomComponents/FormComponents/InputGroup.js","App/CustomComponents/FormComponents/FormInput.js","App/App.js","App/CustomComponents/FormComponents/FormSelectList.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/RoleSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/UniversityInfoSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Inputs/PersonalInfoInput.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/FilterQuery.js","App/Content/ContentView/AdminContent/AdminReaders/AdminReaders.js","App/CustomComponents/Placeholders/ErrorPlaceholder.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/createReader.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/EditReaderInfo.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage.js","App/Content/ModalPages/BooksModalPages/RenderBooksList.js","App/Content/ModalPages/BooksModalPages/IssuedBooksModalPage.js","App/Content/ModalPages/BooksModalPages/LostBooksList.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/AddReaderModalPage.js","App/Content/ModalPages/UserInforamtionModal.js","App/Content/ModalPages/InfractionsModalPages/RenderInfractionsList.js","App/Content/ModalPages/InfractionsModalPages/IssuedInfractionsModalPage.js","App/Content/ModalPages/InfractionsModalPages/ActiveInfractionsModalPage.js","App/Content/ContentView/AdminContent/AdminModals/AdminModals.js","App/Content/ContentView/AdminContent/AdminContent.js","App/Content/ContentView/PublicContent/LibraryPoints.js","App/Content/ContentView/PublicContent/Books/Books.js","App/Content/ContentView/PublicContent/PublicModalPages/createBook.js","App/Content/ContentView/PublicContent/PublicModalPages/AdminAddBookModalPage.js","App/Content/ContentView/PublicContent/PublicModalPages/BookStatistics.js","App/Content/ContentView/PublicContent/PublicModalPages/Publication.js","App/Content/ContentView/PublicContent/PublicModalPages/AdditionalLibraryPointInfo.js","App/Content/ContentView/PublicContent/PublicModalPages/ReserveBookForm.js","App/Content/ContentView/PublicContent/PublicModalPages/BooksOrdersTop.js","App/Content/ContentView/PublicContent/PublicModalPages/PublicModalPages.js","App/Content/ContentView/PublicContent/PublicContent.js","App/Content/ContentView/ContentView.js","App/Content/SideMenu/SideMenuButtons/SideMenuButton.js","App/Content/SideMenu/AdminSideButtons/AdminSideButtons.js","App/Content/SideMenu/SideMenuButtons/PublicSideButtons.js","App/Content/SideMenu/SideMenuButtons/SideMenuButtons.js","App/Content/SideMenu/SideUserInfo.js","App/Content/SideMenu/SideMenu.js","App/Content/Content.js","App/Auth/SideAuthForm.js","App/Auth/Auth.js"],"names":["AdaptiveApp","platform","Platform","VKCOM","App","ReactDOM","render","StrictMode","document","getElementById","FormButton","props","disabled","stretched","mode","onClick","size","text","InputGroup","inputs","Object","keys","map","key","status","name","value","placeholder","onChange","type","required","FormInput","target","username","password","a","fetch","process","REACT_APP_API_HOST","method","body","JSON","stringify","response","json","data","useState","user","setUser","useEffect","console","log","then","onLogout","onButtonClick","authUser","style","justifyContent","FormSelectList","values","RoleSelect","roles","setRoles","getRolesList","role","setRole","StructureSelect","universityStructure","setUniversityStructure","onDepartmentChange","department","setDepartment","setGroup","getUniversityStructure","faculty","setFaculty","facultyOnly","group","UniversityInfoSelect","universityMode","PersonalInfoInput","lastName","setLastName","firstName","setFirstName","surname","setSurname","FilterQuery","middleName","setMiddleName","onFilterSubmit","e","preventDefault","setBody","onSubmit","ReaderListFromCells","readerList","openReaderInfo","header","count","reader","Id","ReaderCell","after","weight","AdminReaders","loading","setLoading","setReaderList","catch","error","id","left","addReaderButtonClick","height","icon","ErrorPlaceholder","EditReaderInformationForm","setPlaceholder","ok","createReader","EditReaderInfo","Name","Surname","Mid_name","Role","Faculty","Department","Group","ReaderStatistics","Issued","indicator","setActiveModal","Lost","Total_infractions","Active_infractions","InformationCell","before","ReaderRoleInformation","canEditInfo","editReaderInfo","ReaderModalPageContent","separator","ReaderModalPage","setReader","editInfo","setEditInfo","confirmDelete","setConfirmDelete","readerId","onClose","settlingHeight","right","isActive","Book","book","multiline","marginBottom","Authors","Title","RenderBooksList","list","Publication_year","IssuedBooksModalPage","booksList","setBooksList","onCLose","LostBooksModalPage","AddReaderModalPage","UserInformationModalPage","TimestampToDate","timestamp","date","Date","getDate","getMonth","slice","getFullYear","Infraction","infraction","Issue_date","RenderInfractionsList","Is_active","Num","IssuedInfractionsModalPage","infractionsList","setInfractionsList","ActiveInfractionsModalPage","AdminModals","activeModal","DebtorsFilter","debtPeriod","setDebtPeriod","libraryPoint","setLibraryPoint","AdminDebtors","debtors","setDebtors","AdminContent","setReaderId","modals","activePanel","modal","RenderPointsList","point","openPointInfo","Can_issue_books","LibraryPoints","points","setPoints","userIsAdmin","openStatistics","description","Available","PublicRenderBooks","books","i","PublicBooksList","Books","page","setPage","userIsAdministrator","openBookInfo","addBookButtonClick","EditBookInfoForm","title","setTitle","authors","setAuthors","publisher","setPublisher","publicationYear","setPublicationYear","getElementsByName","createBook","AdminAddBookModalPage","BookStatistics","issueLog","setIssueLog","Return_date","BookInformation","Publisher","Publication","publication","openLibraryPointInfo","Library_point","Publications","publications","BookInfoModalPage","setPublications","activeBook","setActiveBook","bookInformation","setBookInformation","ReadersList","readers","BooksList","Taken","AdditionalLibraryPointInfo","setReaders","ordersTop","setOrdersTop","currentList","setCurrentList","ReserveBookForm","onReserveBook","LibraryPointModalPage","setPoint","bookId","reserveBook","BooksOrdersTop","top","setTop","BooksOrderPeriod","period","setPeriod","fetchStat","stat_kind","set","Buttons","setList","minReaders","maxReaders","minDebits","maxDebits","LibraryStatistics","setMinReaders","setMaxReaders","setMinDebits","setMaxDebits","currentStat","setCurrentStat","el","Readers","Debitors","PublicModalPages","PublicContent","setBook","ContentView","activeView","SideMenuButton","panel","cellText","view","backgroundColor","borderRadius","data-view","data-panel","adminPanels","AdminSideButtons","publicPanels","PublicSideButtons","SideMenuButtons","SideUserInfo","openUserInfo","aria-label","SideMenu","Content","setActiveView","setActivePanel","fixed","width","maxWidth","currentTarget","dataset","animate","spaced","AuthSideForm","onUsernameChange","onPasswordChange","Auth","setUsername","setPassword"],"mappings":"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","file":"static/js/main.d4cca13c.chunk.js","sourcesContent":["import {ConfigProvider, AdaptivityProvider, AppRoot, Platform} from '@vkontakte/vkui'\nimport App from './App/App'\n\nconst AdaptiveApp = () => {\n  return (\n    <ConfigProvider platform={Platform.VKCOM}>\n        <AdaptivityProvider>\n            <AppRoot>\n                <App />\n            </AppRoot>\n        </AdaptivityProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default AdaptiveApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdaptiveApp from './AdaptiveApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AdaptiveApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { Button, FormItem } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst FormButton = (props) => (\r\n    <FormItem>\r\n        <Button \r\n            disabled={props.disabled} \r\n            stretched={props.stretched} \r\n            mode={props.mode}\r\n            onClick={props.onClick}\r\n            size={props.size}\r\n        >\r\n                {props.text}\r\n        </Button>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormButton;","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormInput from './FormInput'\r\nconst InputGroup = ({inputs, mode}) => (\r\n    <FormLayoutGroup mode={mode}>\r\n        {Object.keys(inputs).map(key => <FormInput\r\n                key={key}\r\n                status={inputs[key].status}\r\n                name={key}\r\n                value={inputs[key].value} \r\n                placeholder={inputs[key].placeholder}\r\n                onChange={inputs[key].onChange} \r\n                type={inputs[key].type ? inputs[key].type : 'text'} \r\n                required={inputs[key].required}\r\n            />)}\r\n    </FormLayoutGroup>\r\n)\r\n\r\nexport default InputGroup;","import React from 'react';\r\nimport {FormItem, Input} from '@vkontakte/vkui'\r\n\r\nconst FormInput = ({name, status, value, \r\n                    placeholder, onChange,\r\n                    type='text', required}) => (\r\n    <FormItem>\r\n        <Input \r\n            name={name}\r\n            status={status} \r\n            value={value}\r\n            placeholder={placeholder} \r\n            onChange={({ target }) => onChange(target.value)} \r\n            type={type} \r\n            required={required} \r\n        />\r\n    </FormItem>\r\n)\r\n\r\nexport default FormInput","import \"@vkontakte/vkui/dist/vkui.css\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport Auth from './Auth/Auth';\r\nimport Content from './Content/Content';\r\n\r\nasync function authUser(username, password) {\r\n    const response = await fetch(process.env.REACT_APP_API_HOST + '/users/auth', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'username': username,\r\n            'password': password\r\n        })\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    return data.data[0]\r\n}\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n    console.log(process)\r\n\r\n        fetch(process.env.REACT_APP_API_HOST + '/users/auth', {method: 'GET'})\r\n        .then(response => response.json())\r\n        .then(({data}) => {\r\n            if (data) setUser(data)\r\n        })\r\n    }, [user])\r\n\r\n    const onLogin = (username, password) => authUser(username, password).then(user => setUser(user))\r\n\r\n    const onLogout = () => setUser(null)\r\n\r\n    return (\r\n        user\r\n        ? <Content onLogout={onLogout} user={user}/>\r\n        : <Auth onButtonClick={onLogin} style={{justifyContent: 'center'}}/>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport {NativeSelect, FormItem} from '@vkontakte/vkui'\r\n\r\nconst FormSelectList = props => (\r\n    <FormItem>\r\n        <NativeSelect\r\n            required={props.required}\r\n            status={props.status}\r\n            placeholder={props.placeholder}\r\n            name={props.name}\r\n            value={props.value}\r\n            onChange={({ target }) => props.onChange(target.value)}\r\n        >\r\n            {props.values.map(value => <option key={value} value={value}>{value}</option>)}\r\n        </NativeSelect>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormSelectList","import React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getRolesList(setRoles) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/roles')\r\n        .then(response => response.json())\r\n        .then(({data}) => setRoles(data))\r\n}\r\n\r\nconst RoleSelect = props => {\r\n    const [roles, setRoles] = useState('')\r\n\r\n    useEffect(() => getRolesList(setRoles), [])\r\n\r\n    return (\r\n        <FormSelectList\r\n            status={props.status}\r\n            required={props.required}\r\n            name={props.name}\r\n            values={roles ? Object.keys(roles) : []}\r\n            value={props.role}\r\n            onChange={props.setRole}\r\n            placeholder='Выберите должность'\r\n        />\r\n    )\r\n}\r\n\r\nexport default RoleSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getUniversityStructure(setUniversityStructure) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/university')\r\n    .then(response => response.json())\r\n    .then(({data}) => setUniversityStructure(data))\r\n}\r\n\r\nconst StructureSelect = (props) => {\r\n    const [universityStructure, setUniversityStructure] = useState('')\r\n\r\n    useEffect(() => getUniversityStructure(setUniversityStructure), [])\r\n\r\n    function onFacultyChange (faculty) {\r\n        props.setFaculty(faculty)\r\n        if (props.facultyOnly) return\r\n        onDepartmentChange(\"\")\r\n    }\r\n    \r\n    function onDepartmentChange (department) {\r\n        props.setDepartment(department)\r\n        props.setGroup('')\r\n    }\r\n    \r\n\r\n    return (\r\n        <FormLayoutGroup mode={props.mode}>\r\n            <FormSelectList\r\n                required={props.required}\r\n                status={props.status}\r\n                name=\"faculty\"\r\n                values={Object.keys(universityStructure)}\r\n                value={props.faculty}\r\n                onChange={onFacultyChange}\r\n                placeholder=\"Выберите факультет\"\r\n            />\r\n            {\r\n                !props.facultyOnly && props.faculty ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"department\"\r\n                    values={Object.keys(universityStructure[props.faculty])}\r\n                    value={props.department}\r\n                    onChange={onDepartmentChange}\r\n                    placeholder=\"Выберите кафедру\"\r\n                /> : ''\r\n            }\r\n            {\r\n                props.department ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"group\"\r\n                    values={universityStructure[props.faculty][props.department]}\r\n                    value={props.group}\r\n                    onChange={props.setGroup}\r\n                    placeholder='Выберите группу'\r\n                /> : ''\r\n            }\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default StructureSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport RoleSelect from './RoleSelect'\r\nimport StructureSelect from './StructureSelect'\r\n\r\nconst UniversityInfoSelect = (props) => {\r\n    return (\r\n        <FormLayoutGroup>\r\n            <RoleSelect role={props.role} setRole={props.setRole}/>\r\n            <StructureSelect \r\n                mode={props.universityMode} \r\n                faculty={props.faculty} setFaculty={props.setFaculty} facultyOnly={props.facultyOnly}\r\n                department={props.department} setDepartment={props.setDepartment}\r\n                group={props.group} setGroup={props.setGroup}\r\n            />\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default UniversityInfoSelect","import { FormLayoutGroup} from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport FormInput from '../../../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nconst PersonalInfoInput = (props) => {\r\n    return (\r\n        <FormLayoutGroup mode='horizontal'>\r\n            <FormInput name='lastName' placeholder='Фамилия' value={props.lastName} onChange={props.setLastName}/>\r\n            <FormInput name='firstName' placeholder='Имя' value={props.firstName} onChange={props.setFirstName}/>\r\n            <FormInput name='surname' placeholder='Отчество' value={props.surname} onChange={props.setSurname}/>\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default PersonalInfoInput","import { FormLayout } from '@vkontakte/vkui'\r\nimport React, {useState} from 'react'\r\nimport UniversityInfoSelect from './Selects/UniversityInfoSelect'\r\nimport PersonalInfoInput from './Inputs/PersonalInfoInput'\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst FilterQuery = props => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n\r\n    const [role, setRole] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n\r\n    async function onFilterSubmit (e) {\r\n        e.preventDefault()\r\n\r\n        let body = {}\r\n\r\n        if (firstName) body['firstName'] = firstName\r\n        if (lastName) body['lastName'] = lastName\r\n        if (middleName) body['middleName'] = middleName\r\n        if (role) body['role'] = role\r\n        if (faculty) body['faculty'] = faculty\r\n        if (department) body['department'] = department\r\n        if (group) body['group'] = group\r\n        \r\n        props.setBody(body)\r\n    }\r\n\r\n    return (\r\n            <FormLayout name='filterQuery' onSubmit={onFilterSubmit}>\r\n                <PersonalInfoInput\r\n                    firstName={firstName} setFirstName={setFirstName}\r\n                    lastName={lastName} setLastName={setLastName}\r\n                    surname={middleName} setSurname={setMiddleName}\r\n                />\r\n                <UniversityInfoSelect\r\n                    role={role} setRole={setRole}\r\n                    faculty={faculty} setFaculty={setFaculty}\r\n                    department={department} setDepartment={setDepartment}\r\n                    group={group} setGroup={setGroup}\r\n                />\r\n                <FormButton stretched mode='primary' onClick={onFilterSubmit} size='l' text='Применить фильтр'/>\r\n            </FormLayout>\r\n    )\r\n}\r\n\r\nexport default FilterQuery;","import { Group, Header, Headline, Panel, PanelHeader, PanelHeaderButton, PanelSpinner, Placeholder, SimpleCell} from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon28ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport FilterQuery from '../ReaderListContent/FilterQuery/FilterQuery'\r\n\r\nconst AdminReaders = props => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [body, setBody] = useState({})\r\n    const [readerList, setReaderList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API_HOST}/readers/query`, {\r\n            method: 'POST', body: JSON.stringify(body)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            setReaderList(<ReaderListFromCells readerList={data} openReaderInfo={props.openReaderInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [body])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={<PanelHeaderButton onClick={props.addReaderButtonClick}>Добавить читателя</PanelHeaderButton>}>\r\n                Список читателей\r\n            </PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : readerList\r\n                    ? <FilterQuery setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {readerList}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport const ReaderListFromCells = ({readerList, openReaderInfo}) => (\r\n    <Group header={<Header>Найдено: {readerList.count}</Header>} mode='plain'>\r\n        {readerList?.data.map(reader => <ReaderCell key={reader.Id} reader={reader} openReaderInfo={openReaderInfo}/>)}\r\n    </Group>\r\n)\r\n\r\n\r\nconst ReaderCell = ({reader, openReaderInfo}) => {\r\n    return (\r\n        <SimpleCell after={<Icon28ChevronRightOutline/>} onClick={() => openReaderInfo(reader.Id)}>\r\n            <Headline weight='medium'>{`${reader['Surname']} ${reader['Name']} ${reader['Mid_name'] ?? ''}`}</Headline>\r\n        </SimpleCell>\r\n    )\r\n}\r\n\r\nexport default AdminReaders;","import React from 'react'\r\nimport {Placeholder} from '@vkontakte/vkui'\r\nimport {Icon56SettingsOutline} from '@vkontakte/icons'\r\n\r\nconst ErrorPlaceholder = ({header = 'Ошибка при получении данных'}) => {\r\n    return (\r\n      <Placeholder\r\n        icon={<Icon56SettingsOutline/>}\r\n        header={header}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ErrorPlaceholder;","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../../CustomComponents/FormComponents/InputGroup';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport RoleSelect from '../../ReaderListContent/FilterQuery/Selects/RoleSelect';\r\nimport StructureSelect from '../../ReaderListContent/FilterQuery/Selects/StructureSelect';\r\n\r\nfunction createReader(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    })\r\n        .then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Читатель зарегистрирован' />) :\r\n            setPlaceholder(<Placeholder header='Ошибка при регистрации читателя' />))\r\n        .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n}\r\n\r\nexport const EditReaderInformationForm = ({ props, setPlaceholder }) => {\r\n\r\n    const [firstName, setFirstName] = useState(props.firstName);\r\n    const [lastName, setLastName] = useState(props.lastName);\r\n    const [middleName, setMiddleName] = useState(props.middleName);\r\n\r\n    const [role, setRole] = useState(props.role);\r\n    const [faculty, setFaculty] = useState('');\r\n    const [department, setDepartment] = useState('');\r\n    const [group, setGroup] = useState('');\r\n\r\n    const onButtonClick = () => {\r\n        if (!role)\r\n            return;\r\n        let body = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            middleName: middleName !== '' ? middleName : null,\r\n            role: role,\r\n            faculty: faculty === '' ? null : faculty,\r\n            department: department === '' ? null : department,\r\n            group: group === '' ? null : group\r\n        };\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createReader(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout name='addReader'>\r\n            <InputGroup\r\n                inputs={{\r\n                    'addReaderLasttName': {\r\n                        'value': lastName,\r\n                        'onChange': setLastName,\r\n                        'placeholder': 'Фамилия',\r\n                        'required': true\r\n                    },\r\n                    'addReaderFirstName': {\r\n                        'value': firstName,\r\n                        'onChange': setFirstName,\r\n                        'placeholder': 'Имя',\r\n                        'required': true\r\n                    },\r\n                    'addReaderMiddleName': {\r\n                        'value': middleName,\r\n                        'onChange': setMiddleName,\r\n                        'placeholder': 'Отчество'\r\n                    }\r\n                }} mode='horizontal' />\r\n            <RoleSelect role={role} setRole={setRole} required status={role ? 'valid' : 'error'} />\r\n            <StructureSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup} />\r\n            <FormButton stretched mode='primary' onClick={onButtonClick} size='l' text={props.text ?? 'Зарегистрировать'} />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { EditReaderInformationForm } from \"../AddReaderModalPage/createReader\";\r\n\r\nexport const EditReaderInfo = ({ reader }) => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n    function onClick(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/readers/' + reader.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация успешно обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n\r\n    return (\r\n        placeholder ??\r\n        <EditReaderInformationForm props={{\r\n            firstName: reader.Name,\r\n            lastName: reader.Surname,\r\n            middleName: reader.Mid_name ?? '',\r\n            role: reader.Role,\r\n            faculty: reader.Faculty ?? '',\r\n            department: reader.Department ?? '',\r\n            group: reader.Group ?? '',\r\n            onClick: onClick,\r\n            text: 'Обновить информацию'\r\n        }} />\r\n    );\r\n};\r\n","import { Icon20ChevronRightOutline } from '@vkontakte/icons';\r\nimport { CellButton, Group, Header, ModalPage, ModalPageHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderClose, PanelHeaderEdit, SimpleCell } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { EditReaderInfo } from './EditReaderInfo';\r\n\r\nconst ReaderStatistics = props => (\r\n    <Group header={<Header>Статистика</Header>} mode='card'>\r\n        <InformationCell\r\n            after={props.reader.Issued ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Issued ?? 0}\r\n            text='Книг на руках'\r\n            onClick={() => props.setActiveModal('issuedBooksList')}\r\n            disabled={!props.reader.Issued}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Lost ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Lost ?? 0}\r\n            onClick={() => props.setActiveModal('lostBooksList')}\r\n            text='Потеряно книг'\r\n            disabled={!props.reader.Lost}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Total_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Total_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('issuedInfractionsList')}\r\n            text='Нарушений'\r\n            disabled={!props.reader.Total_infractions}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Active_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Active_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('activeInfractionsList')}\r\n            text='Из них активных'\r\n            disabled={!props.reader.Active_infractions}\r\n        />\r\n    </Group>\r\n);\r\nconst InformationCell = (props) => (\r\n    props.indicator !== null ?\r\n        <SimpleCell before={props.before} after={props.after} disabled={props.disabled} indicator={props.indicator} onClick={props.onClick}>\r\n            {props.text}\r\n        </SimpleCell> : ''\r\n);\r\nexport const ReaderRoleInformation = ({canEditInfo, reader, editReaderInfo }) => (\r\n    <Group mode='card'>\r\n        <InformationCell disabled indicator={reader.Role} text='Должность' />\r\n        <InformationCell disabled indicator={reader.Faculty} text='Факультет' />\r\n        <InformationCell disabled indicator={reader.Department} text='Кафедра' />\r\n        <InformationCell disabled indicator={reader.Group} text='Группа' />\r\n        {canEditInfo ? <CellButton onClick={editReaderInfo}>Редактировать информацию</CellButton> : null}\r\n    </Group>\r\n);\r\nexport const ReaderModalPageContent = props => (\r\n    <Group separator>\r\n        <ReaderRoleInformation canEditInfo={props.canEditInfo} reader={props.reader} editReaderInfo={props.editReaderInfo}/>\r\n        <ReaderStatistics reader={props.reader} setActiveModal={props.setActiveModal} />\r\n    </Group>\r\n);\r\n\r\nfunction deleteReader (readerId, setActiveModal) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers/' + readerId, {\r\n        method: \"DELETE\"\r\n    }).then(response => setActiveModal(null))\r\n}\r\n\r\nconst ReaderModalPage = props => {\r\n    const [reader, setReader] = useState(null);\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setReader(data[0]));\r\n    }, [props.readerId, editInfo]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose} settlingHeight={100}>\r\n            <ModalPageHeader\r\n                left={\r\n                    editInfo ? \r\n                    <PanelHeaderBack onClick={() => setEditInfo(false)}/> : \r\n                    '' \r\n                }\r\n                right={\r\n                    editInfo ?\r\n                        confirmDelete ? \r\n                        <>\r\n                            <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                            <PanelHeaderEdit isActive onClick={() => deleteReader(reader.Id, props.setActiveModal)}/>\r\n                        </> :\r\n                        <PanelHeaderButton onClick={() => setConfirmDelete(true)}>Удалить</PanelHeaderButton> :\r\n                    ''\r\n                }\r\n                >\r\n                {reader ?\r\n                `${reader.Surname} ${reader.Name} ${reader.Mid_name ?? ''}` :\r\n                ''\r\n                }\r\n            </ModalPageHeader>\r\n            {reader ? \r\n                editInfo ?\r\n                <EditReaderInfo reader={reader}/> :\r\n                <ReaderModalPageContent canEditInfo={true} reader={reader} editReaderInfo={() => setEditInfo(true)} setActiveModal={props.setActiveModal} /> :\r\n            ''}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ReaderModalPage","import { Group, InfoRow, SimpleCell } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nexport const Book = ({ book, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Авторы' style={{ marginBottom: 10 }}>{book.Authors}</InfoRow>\r\n            <InfoRow header='Название книги'>{book.Title}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderBooksList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(book => <Book key={book.Id} book={book} indicator={`Год издания: ${book.Publication_year}`}/>)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderBooksList","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst IssuedBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedBooksModalPage;\r\n","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, {useState, useEffect} from 'react'\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst LostBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books?status=lost`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Потерянные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default LostBooksModalPage","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, {useState} from 'react'\r\nimport { EditReaderInformationForm } from './createReader';\r\n\r\nconst AddReaderModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Добавить читателя</ModalPageHeader>\r\n            {placeholder ?? <EditReaderInformationForm props={props.props ?? props} setPlaceholder={setPlaceholder}/>}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default AddReaderModalPage;","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ReaderRoleInformation } from '../ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage'\r\n\r\nconst UserInformationModalPage = props => {\r\n    const [reader, setReader] = useState(null)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/' + props.reader.Id)\r\n    .then(response => response.json())\r\n    .then(({data}) => setReader(data[0]))\r\n    .catch(error => console.error(error)), [props.reader]\r\n    )\r\n\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Информация о пользователе</ModalPageHeader>\r\n            {reader ? <ReaderRoleInformation reader={reader}/> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default UserInformationModalPage","import React from 'react';\r\nimport { Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\n\r\nexport function TimestampToDate (timestamp) {\r\n    let date = new Date(timestamp * 1000)\r\n    return `${date.getDate()}.${('0' + (date.getMonth() + 1)).slice(-2)}.${date.getFullYear()}`\r\n}\r\n\r\nconst Infraction = ({ infraction, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Нарушение' style={{ marginBottom: 10 }}>{infraction.Infraction}</InfoRow>\r\n            <InfoRow header='Дата выдачи'>{TimestampToDate(infraction.Issue_date)}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderInfractionsList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(infraction => <Infraction key={infraction.Num} infraction={infraction} indicator={infraction.Is_active ? 'Активно' : ''} />)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderInfractionsList","import React, {useState, useEffect} from 'react'\r\nimport {ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst IssuedInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedInfractionsModalPage","import React, {useState, useEffect} from 'react'\r\nimport { ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst ActiveInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions?is_active=true`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ActiveInfractionsModalPage","import { ModalRoot } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ReaderModalPage from './ReaderModalPage/ReaderModalPage';\r\nimport IssuedBooksModalPage from '../../../ModalPages/BooksModalPages/IssuedBooksModalPage';\r\nimport LostBooksModalPage from '../../../ModalPages/BooksModalPages/LostBooksList';\r\nimport AddReaderModalPage from './AddReaderModalPage/AddReaderModalPage';\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal';\r\nimport IssuedInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/IssuedInfractionsModalPage'\r\nimport ActiveInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/ActiveInfractionsModalPage'\r\n\r\nconst AdminModals = props => {\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={() => props.setActiveModal(null)}>\r\n            <AddReaderModalPage id='addReader' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal}/>\r\n            <ReaderModalPage id='readerInfo' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal} readerId={props.readerId} />\r\n            <IssuedBooksModalPage id='issuedBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <LostBooksModalPage id='lostBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <IssuedInfractionsModalPage id='issuedInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <ActiveInfractionsModalPage id='activeInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <UserInformationModalPage id='userInformation' onClose={() => props.setActiveModal(null)} reader={props.user} setActiveModal={props.setActiveModal}/>\r\n        </ModalRoot>\r\n    );\r\n};\r\n\r\nexport default AdminModals","import { View, PanelHeader, Panel, Group, FormLayout, PanelSpinner, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminReaders from './AdminReaders/AdminReaders'\r\nimport AdminModals from './AdminModals/AdminModals'\r\nimport {ReaderListFromCells} from './AdminReaders/AdminReaders'\r\nimport InputGroup from '../../../CustomComponents/FormComponents/InputGroup'\r\nimport UniversityInfoSelect from './ReaderListContent/FilterQuery/Selects/UniversityInfoSelect'\r\nimport FormButton from '../../../CustomComponents/FormComponents/FormButton'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons'\r\nconst DebtorsFilter = ({setBody}) => {\r\n    const [debtPeriod, setDebtPeriod] = useState(10)\r\n    const [libraryPoint, setLibraryPoint] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    function onClick () {\r\n        setBody({\r\n            debtPeriod: debtPeriod !== '' ? debtPeriod : null,\r\n            libraryPoint: libraryPoint !== '' ? libraryPoint : null,\r\n            faculty: faculty !== '' ? faculty : null,\r\n            department: department !== '' ? department : null,\r\n            group: group !== '' ? group : null,\r\n            role: role !== '' ? role : null,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'debtPeriod': {\r\n                    value: debtPeriod,\r\n                    placeholder: 'Введите период задолженности в днях',\r\n                    onChange: setDebtPeriod,\r\n                    type: 'number'\r\n                },\r\n                'libraryPoint': {\r\n                    value: libraryPoint,\r\n                    placeholder: 'Введите название пункта',\r\n                    onChange: setLibraryPoint\r\n                }\r\n            }} mode='horizontal'/>\r\n            <UniversityInfoSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup}\r\n                role={role} setRole={setRole}\r\n                universityMode='horizontal'\r\n                />\r\n            <FormButton onClick={onClick} disabled={debtPeriod < 0} size='l' stretched mode='primary' text='Применить фильтры'/>\r\n        </FormLayout>\r\n    )\r\n\r\n}\r\n\r\nconst AdminDebtors = props => {\r\n    const [body, setBody] = useState({})\r\n    const [debtors, setDebtors] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/debtors', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n        setDebtors(data)\r\n        setLoading(false)\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        setLoading(false)\r\n    }), //eslint-disable-next-line\r\n    [body]\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>Задолжники</PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : debtors\r\n                    ? <DebtorsFilter setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {debtors ? <ReaderListFromCells readerList={debtors} openReaderInfo={props.openReaderInfo}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nconst AdminContent = props => {\r\n    const [readerId, setReaderId] =useState(null)\r\n    const modals = <AdminModals readerId={readerId} activeModal={props.activeModal} setActiveModal={props.setActiveModal} user={props.user}/>\r\n\r\n    function openReaderInfo(readerId) {\r\n        setReaderId(readerId)\r\n        props.setActiveModal('readerInfo')\r\n    }\r\n\r\n    return (\r\n        <View id={props.id} activePanel={props.activePanel} modal={modals}>\r\n            <AdminReaders id='adminReaders' openReaderInfo={openReaderInfo} addReaderButtonClick={() => props.setActiveModal('addReader')}/>\r\n            <AdminDebtors id='adminDebtors' openReaderInfo={openReaderInfo}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AdminContent","import { Group, Header, Panel, PanelHeader, SimpleCell } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon24NotebookCheckOutline } from '@vkontakte/icons';\r\n\r\nconst RenderPointsList = props => {\r\n    return (\r\n        <Group mode='plain' header={<Header>Найдено: {props.data?.count}</Header>}>\r\n        {props.data?.data.map(\r\n            point => <SimpleCell disabled={props.disabled} onClick={() => props.openPointInfo(point)} indicator={point.Can_issue_books ? 'Может выдавать книги' : ''} key={point.Name}>{point.Name}</SimpleCell>)}\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst LibraryPoints = props => {\r\n    const [points, setPoints] = useState(null)\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/library')\r\n        .then(response => response.json())\r\n        .then(data => setPoints(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>\r\n                Библиотечные пункты\r\n            </PanelHeader>\r\n            <Group>\r\n                {userIsAdmin ? <SimpleCell onClick={props.openStatistics} indicator={<Icon24NotebookCheckOutline/>}>Статистика по библиотеке</SimpleCell> : null}\r\n                {points ? <RenderPointsList disabled={!userIsAdmin} openPointInfo={props.openPointInfo} data={points}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default LibraryPoints","import { Icon36ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport { Panel, PanelHeader, Group, SimpleCell, InfoRow, PanelSpinner, Header, Text, PanelHeaderButton, FormLayout, FormLayoutGroup, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst Book = ({book, onClick}) => {\r\n    return (\r\n        <Group mode='plain'>\r\n            <SimpleCell\r\n                indicator={<Icon36ChevronRightOutline/>}\r\n                multiline\r\n                onClick={() => onClick(book)}\r\n                description={`Доступно: ${book.Available ?? 0}`}>\r\n                <InfoRow header={book.Authors}><Text weight='semibold'>{book.Title}</Text ></InfoRow>\r\n            </SimpleCell>\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst PublicRenderBooks = ({header, books, onClick}) => (\r\n    <Group header={header} mode='plain'>\r\n        {books ? books.map((book, i) => <Book key={i} book={book} onClick={onClick} />) : ''}\r\n    </Group>\r\n)\r\n\r\nconst PublicBooksList = (props) => (\r\n    <Group mode='plain'>\r\n        <FormLayout>\r\n            <FormLayoutGroup mode='horizontal'>\r\n                <FormButton size='l' stretched text='Топ книг' onClick={() => props.setActiveModal('booksOrdersTop')}/>\r\n                <FormButton size='l' stretched text='Заказы за период' onClick={() => props.setActiveModal('booksOrdersPeriod')}/>\r\n            </FormLayoutGroup>\r\n        </FormLayout>\r\n        <PublicRenderBooks books={props.books} onClick={props.onClick} header={<Header>Найдено: {props.count}</Header>} />\r\n    </Group>\r\n)\r\n\r\nconst Books = props => {\r\n    const [page, setPage] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const userIsAdministrator = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setPage(<PublicBooksList setActiveModal={props.setActiveModal} count={data.count} books={data.data} onClick={props.openBookInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setPage(<Placeholder header='Ошибка при получении данных' icon={<Icon56ErrorOutline/>}/>)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={userIsAdministrator ? <PanelHeaderButton onClick={props.addBookButtonClick}>Добавить книгу</PanelHeaderButton> : null}>Список книг</PanelHeader>\r\n            <Group>\r\n                {loading ? <PanelSpinner height={96} size='large'/> : page}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default Books","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../CustomComponents/FormComponents/InputGroup';\r\n\r\nfunction createBook(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/books', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.ok ?\r\n        setPlaceholder(<Placeholder header='Книга добавлена' />) :\r\n        setPlaceholder(<Placeholder header='Не удалось добавить книгу в каталог' />\r\n        ));\r\n}\r\n\r\nexport const EditBookInfoForm = ({ props, setPlaceholder }) => {\r\n    const [title, setTitle] = useState(props.title ?? '');\r\n    const [authors, setAuthors] = useState(props.authors ?? '');\r\n    const [publisher, setPublisher] = useState(props.publisher ?? '');\r\n    const [publicationYear, setPublicationYear] = useState(props.publicationYear ?? 0);\r\n\r\n    const onClick = () => {\r\n        let body = {\r\n            title: document.getElementsByName('add_title')[0].value,\r\n            authors: document.getElementsByName('add_authors')[0].value,\r\n            publisher: document.getElementsByName('add_publisher')[0].value,\r\n            publicationYear: document.getElementsByName('add_publicationYear')[0].value\r\n        };\r\n\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createBook(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'add_title': {\r\n                    value: title,\r\n                    onChange: setTitle,\r\n                    placeholder: 'Название книги',\r\n                    required: true\r\n                },\r\n                'add_authors': {\r\n                    value: authors,\r\n                    onChange: setAuthors,\r\n                    placeholder: 'Авторы',\r\n                    required: true\r\n                },\r\n                'add_publisher': {\r\n                    value: publisher,\r\n                    onChange: setPublisher,\r\n                    placeholder: 'Издательство',\r\n                    required: true\r\n                },\r\n                'add_publicationYear': {\r\n                    status: publicationYear > 0 ? 'default' : 'error',\r\n                    value: publicationYear,\r\n                    onChange: setPublicationYear,\r\n                    placeholder: 'Год издания',\r\n                    required: true,\r\n                    type: 'number'\r\n                },\r\n            }} />\r\n            <FormButton\r\n                disabled={!(title && authors && publisher && publicationYear > 0)}\r\n                mode='primary'\r\n                size='l'\r\n                text={props.text ?? 'Добавить книгу'}\r\n                onClick={onClick}\r\n                stretched />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\n\r\nconst AdminAddBookModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>\r\n                Добавить книгу в библиотечный каталог\r\n            </ModalPageHeader>\r\n            {placeholder ?\r\n                placeholder :\r\n                <EditBookInfoForm props={props} setPlaceholder={setPlaceholder}/>\r\n                }\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default AdminAddBookModalPage;","import { TimestampToDate } from '../../../ModalPages/InfractionsModalPages/RenderInfractionsList';\r\nimport { Group, SimpleCell, Header, InfoRow, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\nimport ErrorPlaceholder from '../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { Icon28ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst BookStatistics = ({ book }) => {\r\n    const [issueLog, setIssueLog] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/issue-logs?book_id=' + book.Id)\r\n        .then(response => response.json())\r\n        .then(data => setIssueLog(data)), [book]\r\n    );\r\n\r\n    return (\r\n        issueLog ?\r\n            <Group header={<Header>Выдано экземпляров: {issueLog.count}</Header>}>\r\n                {issueLog.data.map(\r\n                    log => <SimpleCell\r\n                        multiline\r\n                        description={`Должен вернуть ${TimestampToDate(log.Return_date)}`}\r\n                        indicator={new Date(log.Return_date*1000) < new Date() ? <Icon28ErrorOutline/> : null}\r\n                    >\r\n                        <InfoRow header={`ID читателя: ${log.Id}`}>\r\n                            {log.Surname} {log.Name}\r\n                        </InfoRow>\r\n                    </SimpleCell>\r\n                )}\r\n            </Group> : null\r\n    );\r\n};\r\nexport const BookInformation = props => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    function updateBookInformation(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + props.book.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n    return (\r\n        placeholder ??\r\n        <Group>\r\n            <EditBookInfoForm props={{\r\n                title: props.book.Title,\r\n                authors: props.book.Authors,\r\n                publisher: props.book.Publisher,\r\n                publicationYear: props.book.Publication_year,\r\n                text: 'Изменить информацию',\r\n                onClick: updateBookInformation\r\n            }} />\r\n            <BookStatistics book={props.book} />\r\n        </Group>\r\n    );\r\n};\r\n","import { Icon16InfoOutline, Icon28ChevronRightOutline } from '@vkontakte/icons';\r\nimport { ModalPage, ModalPageHeader, Group, SimpleCell, IconButton, PanelHeaderBack, PanelHeaderClose, PanelHeaderSubmit, PanelHeaderButton } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BookInformation } from './BookStatistics';\r\n\r\nconst Publication = ({ userIsAdmin, publication, openBookInfo, openLibraryPointInfo }) => {\r\n    return (\r\n        <SimpleCell\r\n            disabled\r\n            before={userIsAdmin ? <IconButton onClick={() => openBookInfo(publication)}><Icon16InfoOutline/></IconButton> : ''}\r\n            after={publication.Available ? <IconButton onClick={() => openLibraryPointInfo(publication.Library_point, publication)}><Icon28ChevronRightOutline /></IconButton> : null}\r\n            multiline\r\n            description={`Доступно: ${publication.Available ?? 0}, издание ${publication.Publication_year} года`}\r\n        >\r\n            {publication.Library_point}\r\n        </SimpleCell>\r\n    );\r\n};\r\n\r\nconst Publications = ({userIsAdmin, publications, openLibraryPointInfo, openBookInfo}) => {\r\n    return (\r\n        <Group>\r\n            {publications.data.map(\r\n                (publication, i) => <Publication\r\n                                        userIsAdmin={userIsAdmin} \r\n                                        key={i} \r\n                                        publication={publication} \r\n                                        openBookInfo={openBookInfo} \r\n                                        openLibraryPointInfo={openLibraryPointInfo}\r\n                                    />)}\r\n        </Group>\r\n    );\r\n};\r\nexport const BookInfoModalPage = props => {\r\n    const [publications, setPublications] = useState(null);\r\n    const [activeBook, setActiveBook] = useState(null)\r\n    const [bookInformation, setBookInformation] = useState(null)\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n    \r\n    function deleteBook () {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + activeBook.Id, {\r\n            method: 'DELETE'\r\n        }).then(response => setBookInformation(null))\r\n        setConfirmDelete(false)\r\n    }\r\n\r\n    function openBookInfo (book) {\r\n        setActiveBook(book)\r\n        setBookInformation(<BookInformation book={book}/>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/books/publications?title=${props.book.Title}&authors=${props.book.Authors}`)\r\n            .then(response => response.json())\r\n            .then(data => setPublications(data));\r\n    }, [props.book, bookInformation]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader\r\n                left={bookInformation ? <PanelHeaderBack onClick={() => setBookInformation(null)}/> : null}\r\n                right={bookInformation ?\r\n                        confirmDelete ?\r\n                            <>\r\n                                <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                                <PanelHeaderSubmit onClick={deleteBook}/>\r\n                            </> :\r\n                                <PanelHeaderButton onClick={() => setConfirmDelete(true)}>\r\n                                    Удалить\r\n                                </PanelHeaderButton> :\r\n                        null}\r\n            >{bookInformation ? 'Информация о книге' :  'Пункты с данной книгой в наличии' }</ModalPageHeader>\r\n            {publications ?\r\n            bookInformation ??\r\n            <Publications \r\n                userIsAdmin={userIsAdmin} \r\n                publications={publications} \r\n                openBookInfo={openBookInfo}\r\n                openLibraryPointInfo={props.openLibraryPointInfo} \r\n            /> : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Book } from '../../../ModalPages/BooksModalPages/RenderBooksList';\r\n\r\nconst ReadersList = ({ readers }) => {\r\n    return (\r\n        <Group>\r\n            {readers.map(reader => <SimpleCell disabled multiline>\r\n                <InfoRow key={reader.Id} header={`ID: ${reader.Id}, ${reader.Role}`}>{reader.Surname} {reader.Name}</InfoRow>\r\n            </SimpleCell>)}\r\n        </Group>\r\n    );\r\n};\r\n\r\nexport const BooksList = ({books}) => (\r\n    <Group>\r\n        {books.map(book => <Book book={book} key={book.Id} indicator={`Заказов: ${book.Taken}`}/>)}\r\n    </Group>\r\n)\r\n\r\nexport const AdditionalLibraryPointInfo = props => {\r\n    const [readers, setReaders] = useState(null);\r\n    const [ordersTop, setOrdersTop] = useState(null);\r\n    const [currentList, setCurrentList] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + `/library/${props.point.Name}/readers`)\r\n        .then(response => response.json())\r\n        .then(data => setReaders(data))\r\n        .catch(error => console.error(error)),\r\n        [props.point]\r\n    );\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/orders/top?param=library_point&param_name=' + props.point.Name)\r\n    .then(response => response.json())\r\n    .then(data => setOrdersTop(data)), [props.point]\r\n    )\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>{props.point.Name}</ModalPageHeader>\r\n                <Group>\r\n                    {readers ? <SimpleCell disabled={readers.count === 0} onClick={() => setCurrentList(<ReadersList readers={readers.data} />)} indicator={readers.count}>Открыть список читателей</SimpleCell> : null}\r\n                    {ordersTop ? <SimpleCell disabled={ordersTop.count === 0} onClick={() => setCurrentList(<BooksList books={ordersTop.data}/>)}  indicator={ordersTop.count}>Посмотреть топ заказов</SimpleCell> : null}\r\n                </Group>\r\n                {currentList ?? null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, PanelHeaderBack, PanelSpinner, FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\n\r\nfunction reserveBook(book, point, user, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/' + point.Name + '/reserve', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            bookId: book.Id,\r\n            libraryPoint: point.Name,\r\n            readerId: user.Id,\r\n        })\r\n    })\r\n    .then(response => setPlaceholder(\r\n        response.ok ? <Placeholder header='Экземпляр зарезервирован'/> :\r\n        <Placeholder header='Ошибка при резерве, попробуйте позже'/>)\r\n    )\r\n}\r\n\r\nconst ReserveBookForm = ({ book, point, user, onReserveBook }) => {\r\n    return (\r\n        <Group>\r\n            <SimpleCell disabled description='Название пункта'>{point.Name}</SimpleCell>\r\n            <SimpleCell disabled description='Название книги'>{book.Title}</SimpleCell>\r\n            <SimpleCell disabled description='Авторы'>{book.Authors}</SimpleCell>\r\n            <SimpleCell disabled indicator={book.Available}>Доступно книг</SimpleCell>\r\n            <FormLayout>\r\n                <FormButton\r\n                    stretched\r\n                    mode='primary'\r\n                    disabled={!point.Can_issue_books || user.Role === 'Абитуриент'}\r\n                    onClick={onReserveBook}\r\n                    size='l'\r\n                    text={point.Can_issue_books ?\r\n                        user.Role === 'Абитуриент' ?\r\n                            'Вы не можете резервировать книги' :\r\n                            'Зарезервировать экземпляр'\r\n                        : 'Пункт не может выдавать книги'} />\r\n            </FormLayout>\r\n        </Group>\r\n    );\r\n};\r\nexport const LibraryPointModalPage = props => {\r\n    const [point, setPoint] = useState(null);\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/library/${props.libraryPoint}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setPoint(data[0]))\r\n            .catch(error => console.error(error));\r\n    }, [props.libraryPoint]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal('bookInfo')}>\r\n            <ModalPageHeader left={<PanelHeaderBack onClick={() => props.setActiveModal('bookInfo')} />}>Информация о библиотечном пункте</ModalPageHeader>\r\n            {placeholder ? placeholder :\r\n                <Group>\r\n                    {point ?\r\n                    <ReserveBookForm\r\n                        book={props.book} point={point}\r\n                        user={props.user} \r\n                        onReserveBook={() => reserveBook(props.book, point, props.user, setPlaceholder)}/> :\r\n                    <PanelSpinner size={56} />}\r\n                </Group>\r\n            }\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BooksList } from './AdditionalLibraryPointInfo';\r\nimport StructureSelect from '../../AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect';\r\nimport FormInput from '../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nexport const BooksOrdersTop = props => {\r\n    const [faculty, setFaculty] = useState('');\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + '/books/orders/top?param=' + (faculty !== '' ? 'faculty' : ' ') + '&param_name=' + faculty)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [faculty]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Топ книг по вузу и факультетам</ModalPageHeader>\r\n            <StructureSelect faculty={faculty} setFaculty={setFaculty} facultyOnly />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\nexport const BooksOrderPeriod = props => {\r\n    const [period, setPeriod] = useState(31);\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + `/books/orders?order_period=${period}`)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [period]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Заказанные книги за период в днях: {period}</ModalPageHeader>\r\n            <FormInput value={period} onChange={setPeriod} placeholder='Период заказов, в днях' type='number' required />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalRoot, ModalPageHeader, SimpleCell, PanelSpinner, Group } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal'\r\nimport AdminAddBookModalPage from './AdminAddBookModalPage'\r\nimport { BookInfoModalPage } from './Publication'\r\nimport { AdditionalLibraryPointInfo } from './AdditionalLibraryPointInfo'\r\nimport { LibraryPointModalPage } from './ReserveBookForm'\r\nimport { BooksOrdersTop, BooksOrderPeriod } from './BooksOrdersTop'\r\n\r\nfunction fetchStat(stat_kind, set) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/statistics?stat_kind=' + stat_kind)\r\n    .then(response => response.json())\r\n    .then(data => set(data))\r\n}\r\n\r\nconst Buttons = props =>  (\r\n    <Group>\r\n        <SimpleCell onClick={() => props.setList(props.minReaders)} indicator={props.minReaders?.count}>Пункты с минимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxReaders)} indicator={props.maxReaders?.count}>Пункты с максимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.minDebits)} indicator={props.minDebits?.count}>Пункты с минимальным числом задолжников</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxDebits)} indicator={props.maxDebits?.count}>Пункты с максимальным числом задолжников</SimpleCell>\r\n    </Group>\r\n)\r\n\r\nconst LibraryStatistics = props => {\r\n    const [minReaders, setMinReaders] = useState(null)\r\n    const [maxReaders, setMaxReaders] = useState(null)\r\n    const [minDebits, setMinDebits] = useState(null)\r\n    const [maxDebits, setMaxDebits] = useState(null)\r\n    const [currentStat, setCurrentStat] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        fetchStat('min_debitors', setMinDebits)\r\n        fetchStat('min_readers', setMinReaders)\r\n        fetchStat('max_debitors', setMaxDebits)\r\n        fetchStat('max_readers', setMaxReaders)\r\n        setLoading(false)\r\n    }\r\n    , [])\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Статистика по библиотеке</ModalPageHeader>\r\n            {loading ? <PanelSpinner/> : <Buttons setList={setCurrentStat} minReaders={minReaders} maxReaders={maxReaders} minDebits={minDebits} maxDebits={maxDebits}/>}\r\n            {currentStat ? <Group>{currentStat.data.map(el => <SimpleCell key={el.Name} disabled indicator={el?.Readers ?? el?.Debitors}>{el.Name}</SimpleCell>)}</Group> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nconst PublicModalPages = props => {\r\n    const onClose = () => props.setActiveModal(null)\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={onClose}>\r\n            <BookInfoModalPage user={props.user} id='bookInfo' setActiveModal={props.setActiveModal} book={props.book} openLibraryPointInfo={props.openLibraryPointInfo}/>\r\n            <LibraryPointModalPage id='libraryPointInfo' setActiveModal={props.setActiveModal} book={props.book} libraryPoint={props.libraryPoint} user={props.user}/>\r\n            <AdditionalLibraryPointInfo id='additionalLibraryPoint' setActiveModal={props.setActiveModal} point={props.libraryPoint}/>\r\n            <AdminAddBookModalPage id='addBook' setActiveModal={props.setActiveModal}/>\r\n            <UserInformationModalPage id='userInformation' reader={props.user} onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrdersTop id='booksOrdersTop' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrderPeriod id='booksOrdersPeriod' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <LibraryStatistics id='statistics' onClose={onClose}/>\r\n        </ModalRoot>\r\n    )\r\n}\r\n\r\nexport default PublicModalPages","import { View } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport LibraryPoints from './LibraryPoints';\r\nimport Books from './Books/Books';\r\nimport PublicModalPages from './PublicModalPages/PublicModalPages';\r\n\r\nconst PublicContent = props => {\r\n    const [book, setBook] = useState(null)\r\n    const [libraryPoint, setLibraryPoint] = useState(null)\r\n    const modal = <PublicModalPages\r\n                        activeModal={props.activeModal} \r\n                        setActiveModal={props.setActiveModal} \r\n                        book={book} \r\n                        libraryPoint={libraryPoint} \r\n                        user={props.user} \r\n                        openLibraryPointInfo={openLibraryPointInfo}\r\n                    />\r\n\r\n    function openBookInfo (book) {\r\n        setBook(book)\r\n        props.setActiveModal('bookInfo')\r\n    }\r\n\r\n    function openLibraryPointInfo(libraryPoint, book) {\r\n        setBook(book)\r\n        setLibraryPoint(libraryPoint)\r\n        props.setActiveModal('libraryPointInfo')\r\n    }\r\n    \r\n    function openPointInfo(point) {\r\n        setLibraryPoint(point)\r\n        props.setActiveModal('additionalLibraryPoint')\r\n    }\r\n\r\n    return (\r\n        <View activePanel={props.activePanel} id={props.id} modal={modal}>\r\n            <Books\r\n            setActiveModal={props.setActiveModal}\r\n                id='publicBooks'\r\n                openBookInfo={openBookInfo}\r\n                user={props.user}\r\n                addBookButtonClick={() => props.setActiveModal('addBook')}\r\n            />\r\n            <LibraryPoints\r\n                openStatistics={() => props.setActiveModal('statistics')}\r\n                id='publicLibraryPoints'\r\n                user={props.user}\r\n                openPointInfo={openPointInfo}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PublicContent","import { Root } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport AdminContent from './AdminContent/AdminContent';\r\nimport PublicContent from './PublicContent/PublicContent';\r\n\r\nconst ContentView = props => {\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Root activeView={props.activeView}>\r\n            <PublicContent\r\n                user={props.user}\r\n                id='publicContent'\r\n                activePanel={props.activePanel}\r\n                activeModal={props.activeModal}\r\n                setActiveModal={props.setActiveModal}\r\n            />\r\n            {userIsAdmin ?\r\n                <AdminContent\r\n                    user={props.user}\r\n                    id='adminContent'\r\n                    activePanel={props.activePanel}\r\n                    activeModal={props.activeModal}\r\n                    setActiveModal={props.setActiveModal}\r\n                /> : null\r\n            }\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default ContentView;","import { Cell } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst SideMenuButton = ({panel, activePanel, onClick, cellText, view}) => {\r\n    return (\r\n        <Cell\r\n            key={panel}\r\n            disabled={panel === activePanel}\r\n            style={panel === activePanel ? {\r\n            backgroundColor: \"var(--button_secondary_background)\",\r\n            borderRadius: 8\r\n            } : {}}\r\n            data-view={view}\r\n            data-panel={panel}\r\n            onClick={onClick}\r\n        >\r\n            {cellText}\r\n        </Cell>\r\n    )\r\n}\r\n\r\nexport default SideMenuButton","import { Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport SideMenuButton from '../SideMenuButtons/SideMenuButton'\r\n\r\nconst adminPanels = {\r\n    'adminReaders': 'Читатели',\r\n    'adminDebtors': 'Задолжники'\r\n}\r\n\r\nconst AdminSideButtons = props => (\r\n    <Group mode='plain'>\r\n        {Object.keys(adminPanels).map(panel => <SideMenuButton view='adminContent' key={panel}\r\n            panel={panel} activePanel={props.activePanel}\r\n            onClick={props.onClick} cellText={adminPanels[panel]} />)}\r\n    </Group>\r\n)\r\n\r\nexport default AdminSideButtons","import { Group } from \"@vkontakte/vkui\";\r\nimport SideMenuButton from \"./SideMenuButton\"\r\n\r\nconst publicPanels = {\r\n    'publicBooks': 'Список книг',\r\n    'publicLibraryPoints': 'Библиотечные пункты',\r\n}\r\n\r\nconst PublicSideButtons = ({activePanel, onClick}) => (\r\n    <Group mode='plain'>\r\n    {Object.keys(publicPanels).map(panel => (\r\n        <SideMenuButton\r\n            key={panel}\r\n            panel={panel}\r\n            activePanel={activePanel}\r\n            cellText={publicPanels[panel]}\r\n            onClick={onClick}\r\n            view='publicContent'\r\n        />\r\n        )\r\n    )}\r\n    </Group>\r\n)\r\n\r\nexport default PublicSideButtons;","import { Group } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport AdminSideButtons from '../AdminSideButtons/AdminSideButtons';\r\nimport PublicSideButtons from './PublicSideButtons';\r\n\r\n\r\nconst SideMenuButtons = ({activePanel, onClick, userIsAdmin}) => {\r\n    return (\r\n        <Group mode='plain' separator='auto'>\r\n            <PublicSideButtons activePanel={activePanel} onClick={onClick}/>\r\n            {userIsAdmin ? <AdminSideButtons activePanel={activePanel} onClick={onClick}/> : null} \r\n        </Group>\r\n    )\r\n}\r\n\r\nexport default SideMenuButtons","import { IconButton, SimpleCell, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { Icon24DoorArrowLeftOutline, Icon24UserOutline } from '@vkontakte/icons';\r\n\r\n\r\nconst SideUserInfo = ({user, openUserInfo, onLogout}) => (\r\n    <Group mode='plain' separator='auto'>\r\n        <SimpleCell\r\n            disabled\r\n            multiline\r\n            after={<>\r\n            {openUserInfo ? <IconButton aria-label='Открыть профиль' onClick={openUserInfo}><Icon24UserOutline/></IconButton> : null}\r\n\r\n            <IconButton aria-label='Выход' onClick={onLogout}><Icon24DoorArrowLeftOutline /></IconButton>\r\n            </>}\r\n            description={user.Role}\r\n        >\r\n            {`${user.Surname} ${user.Name}`}\r\n        </SimpleCell>\r\n    </Group>\r\n)\r\n\r\nexport default SideUserInfo;","import React from 'react'\r\nimport {Group, Panel} from '@vkontakte/vkui'\r\nimport SideMenuButtons from './SideMenuButtons/SideMenuButtons'\r\nimport SideUserInfo from './SideUserInfo.js'\r\n\r\nconst SideMenu = props => {\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Panel>\r\n            <Group>\r\n                <SideUserInfo user={props.user} openUserInfo={props.openUserInfo} onLogout={props.onLogout}/>\r\n                <SideMenuButtons activePanel={props.activePanel} onClick={props.onClick} userIsAdmin={userIsAdmin}/>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default SideMenu","import { SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport ContentView from './ContentView/ContentView'\r\nimport SideMenu from './SideMenu/SideMenu'\r\n\r\n\r\n\r\nconst Content = props => {\r\n    const [activeView, setActiveView] = useState('publicContent')\r\n    const [activePanel, setActivePanel] = useState('publicBooks')\r\n    const [activeModal, setActiveModal] = useState(null)\r\n\r\n    const go = e => {\r\n        setActiveView(e.currentTarget.dataset.view)\r\n        setActivePanel(e.currentTarget.dataset.panel)\r\n    }\r\n\r\n    // function openUserInfo () {\r\n    //     setActiveModal('userInformation')\r\n    // }\r\n\r\n    return (\r\n        <SplitLayout style={{justifyContent: 'center'}}>\r\n            <SplitCol fixed width='250px' maxWidth='250px'>\r\n                <SideMenu\r\n                    user={props.user}\r\n                    activePanel={activePanel}\r\n                    onClick={go}\r\n                    onLogout={props.onLogout}\r\n                />\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <ContentView activeModal={activeModal} setActiveModal={setActiveModal} activePanel={activePanel} activeView={activeView} user={props.user} setActivePanel={setActivePanel}/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Content;","import { FormLayout } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormButton from '../CustomComponents/FormComponents/FormButton'\r\nimport InputGroup from '../CustomComponents/FormComponents/InputGroup'\r\n\r\nconst AuthSideForm = props => {\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'username': {\r\n                    'value': props.username,\r\n                    'placeholder': \"Имя пользователя\",\r\n                    'onChange': props.onUsernameChange,\r\n                    'required': true\r\n                },\r\n                'password': {\r\n                    'value': props.password,\r\n                    'placeholder': \"Пароль\",\r\n                    'onChange': props.onPasswordChange,\r\n                    'required': true,\r\n                    'type': 'password'\r\n                }\r\n                }\r\n            }/>\r\n            <FormButton text=\"Вход\" mode='primary' stretched onClick={props.onButtonClick}/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nexport default AuthSideForm;","import { Placeholder, Spacing, SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport AuthSideForm from './SideAuthForm'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst Auth = props => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onButtonClick = () => props.onButtonClick(username, password)\r\n    \r\n    return (\r\n        <SplitLayout style={props.style}>\r\n            <SplitCol width='250px' maxWidth='250px'>\r\n                <Spacing/>\r\n                <AuthSideForm username={username} password={password} onUsernameChange={setUsername} onPasswordChange={setPassword} onButtonClick={onButtonClick}/>\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <Placeholder icon={<Icon56ErrorOutline/>} stretched header='Для доступа к приложению необходимо авторизоваться'/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Auth;"],"sourceRoot":""}