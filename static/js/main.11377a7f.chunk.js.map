{"version":3,"sources":["App/CustomComponents/FormComponents/FormButton.js","App/CustomComponents/FormComponents/FormInput.js","App/CustomComponents/FormComponents/InputGroup.js","App/Auth/SideAuthForm.js","App/Auth/Auth.js","App/CustomComponents/FormComponents/FormSelectList.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/RoleSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/UniversityInfoSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Inputs/PersonalInfoInput.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/FilterQuery.js","App/Content/ContentView/AdminContent/AdminReaders/AdminReaders.js","App/CustomComponents/Placeholders/ErrorPlaceholder.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/createReader.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/EditReaderInfo.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage.js","App/Content/ModalPages/BooksModalPages/RenderBooksList.js","App/Content/ModalPages/BooksModalPages/IssuedBooksModalPage.js","App/Content/ModalPages/BooksModalPages/LostBooksList.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/AddReaderModalPage.js","App/Content/ModalPages/UserInforamtionModal.js","App/Content/ModalPages/InfractionsModalPages/RenderInfractionsList.js","App/Content/ModalPages/InfractionsModalPages/IssuedInfractionsModalPage.js","App/Content/ModalPages/InfractionsModalPages/ActiveInfractionsModalPage.js","App/Content/ContentView/AdminContent/AdminModals/AdminModals.js","App/Content/ContentView/AdminContent/AdminContent.js","App/Content/ContentView/PublicContent/LibraryPoints.js","App/Content/ContentView/PublicContent/Books/Books.js","App/Content/ContentView/PublicContent/PublicModalPages/createBook.js","App/Content/ContentView/PublicContent/PublicModalPages/AdminAddBookModalPage.js","App/Content/ContentView/PublicContent/PublicModalPages/BookStatistics.js","App/Content/ContentView/PublicContent/PublicModalPages/Publication.js","App/Content/ContentView/PublicContent/PublicModalPages/AdditionalLibraryPointInfo.js","App/Content/ContentView/PublicContent/PublicModalPages/ReserveBookForm.js","App/Content/ContentView/PublicContent/PublicModalPages/BooksOrdersTop.js","App/Content/ContentView/PublicContent/PublicModalPages/PublicModalPages.js","App/Content/ContentView/PublicContent/PublicContent.js","App/Content/ContentView/ContentView.js","App/Content/SideMenu/SideMenuButtons/SideMenuButton.js","App/Content/SideMenu/AdminSideButtons/AdminSideButtons.js","App/Content/SideMenu/SideMenuButtons/PublicSideButtons.js","App/Content/SideMenu/SideMenuButtons/SideMenuButtons.js","App/Content/SideMenu/SideUserInfo.js","App/Content/SideMenu/SideMenu.js","App/Content/Content.js","App/App.js","AdaptiveApp.js","index.js"],"names":["FormButton","props","disabled","stretched","mode","onClick","size","text","FormInput","name","status","value","placeholder","onChange","type","required","target","InputGroup","inputs","Object","keys","map","key","AuthSideForm","username","onUsernameChange","password","onPasswordChange","onButtonClick","Auth","useState","setUsername","setPassword","style","width","maxWidth","animate","spaced","icon","header","FormSelectList","values","RoleSelect","roles","setRoles","useEffect","fetch","process","then","response","json","data","getRolesList","role","setRole","StructureSelect","universityStructure","setUniversityStructure","onDepartmentChange","department","setDepartment","setGroup","getUniversityStructure","faculty","setFaculty","facultyOnly","group","UniversityInfoSelect","universityMode","PersonalInfoInput","lastName","setLastName","firstName","setFirstName","surname","setSurname","FilterQuery","middleName","setMiddleName","onFilterSubmit","e","a","preventDefault","body","setBody","onSubmit","ReaderListFromCells","readerList","openReaderInfo","count","reader","Id","ReaderCell","after","weight","AdminReaders","loading","setLoading","setReaderList","method","JSON","stringify","catch","error","console","id","left","addReaderButtonClick","height","ErrorPlaceholder","EditReaderInformationForm","setPlaceholder","ok","createReader","EditReaderInfo","Name","Surname","Mid_name","Role","Faculty","Department","Group","ReaderStatistics","Issued","indicator","setActiveModal","Lost","Total_infractions","Active_infractions","InformationCell","before","ReaderRoleInformation","canEditInfo","editReaderInfo","ReaderModalPageContent","separator","ReaderModalPage","setReader","editInfo","setEditInfo","confirmDelete","setConfirmDelete","readerId","onClose","settlingHeight","right","isActive","Book","book","multiline","marginBottom","Authors","Title","RenderBooksList","list","Publication_year","IssuedBooksModalPage","booksList","setBooksList","onCLose","LostBooksModalPage","AddReaderModalPage","UserInformationModalPage","TimestampToDate","timestamp","date","Date","getDate","getMonth","slice","getFullYear","Infraction","infraction","Issue_date","RenderInfractionsList","Is_active","Num","IssuedInfractionsModalPage","infractionsList","setInfractionsList","ActiveInfractionsModalPage","AdminModals","activeModal","user","DebtorsFilter","debtPeriod","setDebtPeriod","libraryPoint","setLibraryPoint","AdminDebtors","debtors","setDebtors","AdminContent","setReaderId","modals","activePanel","modal","RenderPointsList","point","openPointInfo","Can_issue_books","LibraryPoints","points","setPoints","userIsAdmin","openStatistics","description","Available","PublicRenderBooks","books","i","PublicBooksList","Books","page","setPage","userIsAdministrator","openBookInfo","addBookButtonClick","EditBookInfoForm","title","setTitle","authors","setAuthors","publisher","setPublisher","publicationYear","setPublicationYear","document","getElementsByName","createBook","AdminAddBookModalPage","BookStatistics","issueLog","setIssueLog","log","Return_date","BookInformation","Publisher","Publication","publication","openLibraryPointInfo","Library_point","Publications","publications","BookInfoModalPage","setPublications","activeBook","setActiveBook","bookInformation","setBookInformation","ReadersList","readers","BooksList","Taken","AdditionalLibraryPointInfo","setReaders","ordersTop","setOrdersTop","currentList","setCurrentList","ReserveBookForm","onReserveBook","LibraryPointModalPage","setPoint","bookId","reserveBook","BooksOrdersTop","top","setTop","BooksOrderPeriod","period","setPeriod","fetchStat","stat_kind","set","Buttons","setList","minReaders","maxReaders","minDebits","maxDebits","LibraryStatistics","setMinReaders","setMaxReaders","setMinDebits","setMaxDebits","currentStat","setCurrentStat","el","Readers","Debitors","PublicModalPages","PublicContent","setBook","ContentView","activeView","SideMenuButton","panel","cellText","view","backgroundColor","borderRadius","data-view","data-panel","adminPanels","AdminSideButtons","publicPanels","PublicSideButtons","SideMenuButtons","SideUserInfo","openUserInfo","onLogout","aria-label","SideMenu","Content","setActiveView","setActivePanel","justifyContent","fixed","currentTarget","dataset","App","setUser","authUser","AdaptiveApp","platform","Platform","VKCOM","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11377a7f.chunk.js","sourcesContent":["import { Button, FormItem } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst FormButton = (props) => (\r\n    <FormItem>\r\n        <Button \r\n            disabled={props.disabled} \r\n            stretched={props.stretched} \r\n            mode={props.mode}\r\n            onClick={props.onClick}\r\n            size={props.size}\r\n        >\r\n                {props.text}\r\n        </Button>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormButton;","import React from 'react';\r\nimport {FormItem, Input} from '@vkontakte/vkui'\r\n\r\nconst FormInput = ({name, status, value, \r\n                    placeholder, onChange,\r\n                    type='text', required}) => (\r\n    <FormItem>\r\n        <Input \r\n            name={name}\r\n            status={status} \r\n            value={value}\r\n            placeholder={placeholder} \r\n            onChange={({ target }) => onChange(target.value)} \r\n            type={type} \r\n            required={required} \r\n        />\r\n    </FormItem>\r\n)\r\n\r\nexport default FormInput","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormInput from './FormInput'\r\nconst InputGroup = ({inputs, mode}) => (\r\n    <FormLayoutGroup mode={mode}>\r\n        {Object.keys(inputs).map(key => <FormInput\r\n                key={key}\r\n                status={inputs[key].status}\r\n                name={key}\r\n                value={inputs[key].value} \r\n                placeholder={inputs[key].placeholder}\r\n                onChange={inputs[key].onChange} \r\n                type={inputs[key].type ? inputs[key].type : 'text'} \r\n                required={inputs[key].required}\r\n            />)}\r\n    </FormLayoutGroup>\r\n)\r\n\r\nexport default InputGroup;","import { FormLayout } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormButton from '../CustomComponents/FormComponents/FormButton'\r\nimport InputGroup from '../CustomComponents/FormComponents/InputGroup'\r\n\r\nconst AuthSideForm = props => {\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'username': {\r\n                    'value': props.username,\r\n                    'placeholder': \"Имя пользователя\",\r\n                    'onChange': props.onUsernameChange,\r\n                    'required': true\r\n                },\r\n                'password': {\r\n                    'value': props.password,\r\n                    'placeholder': \"Пароль\",\r\n                    'onChange': props.onPasswordChange,\r\n                    'required': true,\r\n                    'type': 'password'\r\n                }\r\n                }\r\n            }/>\r\n            <FormButton text=\"Вход\" mode='primary' stretched onClick={props.onButtonClick}/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nexport default AuthSideForm;","import { Placeholder, Spacing, SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport AuthSideForm from './SideAuthForm'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst Auth = props => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onButtonClick = () => props.onButtonClick(username, password)\r\n    \r\n    return (\r\n        <SplitLayout style={props.style}>\r\n            <SplitCol width='250px' maxWidth='250px'>\r\n                <Spacing/>\r\n                <AuthSideForm username={username} password={password} onUsernameChange={setUsername} onPasswordChange={setPassword} onButtonClick={onButtonClick}/>\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <Placeholder icon={<Icon56ErrorOutline/>} stretched header='Для доступа к приложению необходимо авторизоваться'/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React from 'react'\r\nimport {NativeSelect, FormItem} from '@vkontakte/vkui'\r\n\r\nconst FormSelectList = props => (\r\n    <FormItem>\r\n        <NativeSelect\r\n            required={props.required}\r\n            status={props.status}\r\n            placeholder={props.placeholder}\r\n            name={props.name}\r\n            value={props.value}\r\n            onChange={({ target }) => props.onChange(target.value)}\r\n        >\r\n            {props.values.map(value => <option key={value} value={value}>{value}</option>)}\r\n        </NativeSelect>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormSelectList","import React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getRolesList(setRoles) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/roles')\r\n        .then(response => response.json())\r\n        .then(({data}) => setRoles(data))\r\n}\r\n\r\nconst RoleSelect = props => {\r\n    const [roles, setRoles] = useState('')\r\n\r\n    useEffect(() => getRolesList(setRoles), [])\r\n\r\n    return (\r\n        <FormSelectList\r\n            status={props.status}\r\n            required={props.required}\r\n            name={props.name}\r\n            values={roles ? Object.keys(roles) : []}\r\n            value={props.role}\r\n            onChange={props.setRole}\r\n            placeholder='Выберите должность'\r\n        />\r\n    )\r\n}\r\n\r\nexport default RoleSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getUniversityStructure(setUniversityStructure) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/university')\r\n    .then(response => response.json())\r\n    .then(({data}) => setUniversityStructure(data))\r\n}\r\n\r\nconst StructureSelect = (props) => {\r\n    const [universityStructure, setUniversityStructure] = useState('')\r\n\r\n    useEffect(() => getUniversityStructure(setUniversityStructure), [])\r\n\r\n    function onFacultyChange (faculty) {\r\n        props.setFaculty(faculty)\r\n        if (props.facultyOnly) return\r\n        onDepartmentChange(\"\")\r\n    }\r\n    \r\n    function onDepartmentChange (department) {\r\n        props.setDepartment(department)\r\n        props.setGroup('')\r\n    }\r\n    \r\n\r\n    return (\r\n        <FormLayoutGroup mode={props.mode}>\r\n            <FormSelectList\r\n                required={props.required}\r\n                status={props.status}\r\n                name=\"faculty\"\r\n                values={Object.keys(universityStructure)}\r\n                value={props.faculty}\r\n                onChange={onFacultyChange}\r\n                placeholder=\"Выберите факультет\"\r\n            />\r\n            {\r\n                !props.facultyOnly && props.faculty ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"department\"\r\n                    values={Object.keys(universityStructure[props.faculty])}\r\n                    value={props.department}\r\n                    onChange={onDepartmentChange}\r\n                    placeholder=\"Выберите кафедру\"\r\n                /> : ''\r\n            }\r\n            {\r\n                props.department ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"group\"\r\n                    values={universityStructure[props.faculty][props.department]}\r\n                    value={props.group}\r\n                    onChange={props.setGroup}\r\n                    placeholder='Выберите группу'\r\n                /> : ''\r\n            }\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default StructureSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport RoleSelect from './RoleSelect'\r\nimport StructureSelect from './StructureSelect'\r\n\r\nconst UniversityInfoSelect = (props) => {\r\n    return (\r\n        <FormLayoutGroup>\r\n            <RoleSelect role={props.role} setRole={props.setRole}/>\r\n            <StructureSelect \r\n                mode={props.universityMode} \r\n                faculty={props.faculty} setFaculty={props.setFaculty} facultyOnly={props.facultyOnly}\r\n                department={props.department} setDepartment={props.setDepartment}\r\n                group={props.group} setGroup={props.setGroup}\r\n            />\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default UniversityInfoSelect","import { FormLayoutGroup} from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport FormInput from '../../../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nconst PersonalInfoInput = (props) => {\r\n    return (\r\n        <FormLayoutGroup mode='horizontal'>\r\n            <FormInput name='lastName' placeholder='Фамилия' value={props.lastName} onChange={props.setLastName}/>\r\n            <FormInput name='firstName' placeholder='Имя' value={props.firstName} onChange={props.setFirstName}/>\r\n            <FormInput name='surname' placeholder='Отчество' value={props.surname} onChange={props.setSurname}/>\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default PersonalInfoInput","import { FormLayout } from '@vkontakte/vkui'\r\nimport React, {useState} from 'react'\r\nimport UniversityInfoSelect from './Selects/UniversityInfoSelect'\r\nimport PersonalInfoInput from './Inputs/PersonalInfoInput'\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst FilterQuery = props => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n\r\n    const [role, setRole] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n\r\n    async function onFilterSubmit (e) {\r\n        e.preventDefault()\r\n\r\n        let body = {}\r\n\r\n        if (firstName) body['firstName'] = firstName\r\n        if (lastName) body['lastName'] = lastName\r\n        if (middleName) body['middleName'] = middleName\r\n        if (role) body['role'] = role\r\n        if (faculty) body['faculty'] = faculty\r\n        if (department) body['department'] = department\r\n        if (group) body['group'] = group\r\n        \r\n        props.setBody(body)\r\n    }\r\n\r\n    return (\r\n            <FormLayout name='filterQuery' onSubmit={onFilterSubmit}>\r\n                <PersonalInfoInput\r\n                    firstName={firstName} setFirstName={setFirstName}\r\n                    lastName={lastName} setLastName={setLastName}\r\n                    surname={middleName} setSurname={setMiddleName}\r\n                />\r\n                <UniversityInfoSelect\r\n                    role={role} setRole={setRole}\r\n                    faculty={faculty} setFaculty={setFaculty}\r\n                    department={department} setDepartment={setDepartment}\r\n                    group={group} setGroup={setGroup}\r\n                />\r\n                <FormButton stretched mode='primary' onClick={onFilterSubmit} size='l' text='Применить фильтр'/>\r\n            </FormLayout>\r\n    )\r\n}\r\n\r\nexport default FilterQuery;","import { Group, Header, Headline, Panel, PanelHeader, PanelHeaderButton, PanelSpinner, Placeholder, SimpleCell} from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon28ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport FilterQuery from '../ReaderListContent/FilterQuery/FilterQuery'\r\n\r\nconst AdminReaders = props => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [body, setBody] = useState({})\r\n    const [readerList, setReaderList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API_HOST}/readers/query`, {\r\n            method: 'POST', body: JSON.stringify(body)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            setReaderList(<ReaderListFromCells readerList={data} openReaderInfo={props.openReaderInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [body])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={<PanelHeaderButton onClick={props.addReaderButtonClick}>Добавить читателя</PanelHeaderButton>}>\r\n                Список читателей\r\n            </PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : readerList\r\n                    ? <FilterQuery setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {readerList}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport const ReaderListFromCells = ({readerList, openReaderInfo}) => (\r\n    <Group header={<Header>Найдено: {readerList.count}</Header>} mode='plain'>\r\n        {readerList?.data.map(reader => <ReaderCell key={reader.Id} reader={reader} openReaderInfo={openReaderInfo}/>)}\r\n    </Group>\r\n)\r\n\r\n\r\nconst ReaderCell = ({reader, openReaderInfo}) => {\r\n    return (\r\n        <SimpleCell after={<Icon28ChevronRightOutline/>} onClick={() => openReaderInfo(reader.Id)}>\r\n            <Headline weight='medium'>{`${reader['Surname']} ${reader['Name']} ${reader['Mid_name'] ?? ''}`}</Headline>\r\n        </SimpleCell>\r\n    )\r\n}\r\n\r\nexport default AdminReaders;","import React from 'react'\r\nimport {Placeholder} from '@vkontakte/vkui'\r\nimport {Icon56SettingsOutline} from '@vkontakte/icons'\r\n\r\nconst ErrorPlaceholder = ({header = 'Ошибка при получении данных'}) => {\r\n    return (\r\n      <Placeholder\r\n        icon={<Icon56SettingsOutline/>}\r\n        header={header}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ErrorPlaceholder;","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../../CustomComponents/FormComponents/InputGroup';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport RoleSelect from '../../ReaderListContent/FilterQuery/Selects/RoleSelect';\r\nimport StructureSelect from '../../ReaderListContent/FilterQuery/Selects/StructureSelect';\r\n\r\nfunction createReader(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    })\r\n        .then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Читатель зарегистрирован' />) :\r\n            setPlaceholder(<Placeholder header='Ошибка при регистрации читателя' />))\r\n        .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n}\r\n\r\nexport const EditReaderInformationForm = ({ props, setPlaceholder }) => {\r\n\r\n    const [firstName, setFirstName] = useState(props.firstName);\r\n    const [lastName, setLastName] = useState(props.lastName);\r\n    const [middleName, setMiddleName] = useState(props.middleName);\r\n\r\n    const [role, setRole] = useState(props.role);\r\n    const [faculty, setFaculty] = useState('');\r\n    const [department, setDepartment] = useState('');\r\n    const [group, setGroup] = useState('');\r\n\r\n    const onButtonClick = () => {\r\n        if (!role)\r\n            return;\r\n        let body = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            middleName: middleName !== '' ? middleName : null,\r\n            role: role,\r\n            faculty: faculty === '' ? null : faculty,\r\n            department: department === '' ? null : department,\r\n            group: group === '' ? null : group\r\n        };\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createReader(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout name='addReader'>\r\n            <InputGroup\r\n                inputs={{\r\n                    'addReaderLasttName': {\r\n                        'value': lastName,\r\n                        'onChange': setLastName,\r\n                        'placeholder': 'Фамилия',\r\n                        'required': true\r\n                    },\r\n                    'addReaderFirstName': {\r\n                        'value': firstName,\r\n                        'onChange': setFirstName,\r\n                        'placeholder': 'Имя',\r\n                        'required': true\r\n                    },\r\n                    'addReaderMiddleName': {\r\n                        'value': middleName,\r\n                        'onChange': setMiddleName,\r\n                        'placeholder': 'Отчество'\r\n                    }\r\n                }} mode='horizontal' />\r\n            <RoleSelect role={role} setRole={setRole} required status={role ? 'valid' : 'error'} />\r\n            <StructureSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup} />\r\n            <FormButton stretched mode='primary' onClick={onButtonClick} size='l' text={props.text ?? 'Зарегистрировать'} />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { EditReaderInformationForm } from \"../AddReaderModalPage/createReader\";\r\n\r\nexport const EditReaderInfo = ({ reader }) => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n    function onClick(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/readers/' + reader.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация успешно обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n\r\n    return (\r\n        placeholder ??\r\n        <EditReaderInformationForm props={{\r\n            firstName: reader.Name,\r\n            lastName: reader.Surname,\r\n            middleName: reader.Mid_name ?? '',\r\n            role: reader.Role,\r\n            faculty: reader.Faculty ?? '',\r\n            department: reader.Department ?? '',\r\n            group: reader.Group ?? '',\r\n            onClick: onClick,\r\n            text: 'Обновить информацию'\r\n        }} />\r\n    );\r\n};\r\n","import { Icon20ChevronRightOutline } from '@vkontakte/icons';\r\nimport { CellButton, Group, Header, ModalPage, ModalPageHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderClose, PanelHeaderEdit, SimpleCell } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { EditReaderInfo } from './EditReaderInfo';\r\n\r\nconst ReaderStatistics = props => (\r\n    <Group header={<Header>Статистика</Header>} mode='card'>\r\n        <InformationCell\r\n            after={props.reader.Issued ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Issued ?? 0}\r\n            text='Книг на руках'\r\n            onClick={() => props.setActiveModal('issuedBooksList')}\r\n            disabled={!props.reader.Issued}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Lost ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Lost ?? 0}\r\n            onClick={() => props.setActiveModal('lostBooksList')}\r\n            text='Потеряно книг'\r\n            disabled={!props.reader.Lost}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Total_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Total_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('issuedInfractionsList')}\r\n            text='Нарушений'\r\n            disabled={!props.reader.Total_infractions}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Active_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Active_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('activeInfractionsList')}\r\n            text='Из них активных'\r\n            disabled={!props.reader.Active_infractions}\r\n        />\r\n    </Group>\r\n);\r\nconst InformationCell = (props) => (\r\n    props.indicator !== null ?\r\n        <SimpleCell before={props.before} after={props.after} disabled={props.disabled} indicator={props.indicator} onClick={props.onClick}>\r\n            {props.text}\r\n        </SimpleCell> : ''\r\n);\r\nexport const ReaderRoleInformation = ({canEditInfo, reader, editReaderInfo }) => (\r\n    <Group mode='card'>\r\n        <InformationCell disabled indicator={reader.Role} text='Должность' />\r\n        <InformationCell disabled indicator={reader.Faculty} text='Факультет' />\r\n        <InformationCell disabled indicator={reader.Department} text='Кафедра' />\r\n        <InformationCell disabled indicator={reader.Group} text='Группа' />\r\n        {canEditInfo ? <CellButton onClick={editReaderInfo}>Редактировать информацию</CellButton> : null}\r\n    </Group>\r\n);\r\nexport const ReaderModalPageContent = props => (\r\n    <Group separator>\r\n        <ReaderRoleInformation canEditInfo={props.canEditInfo} reader={props.reader} editReaderInfo={props.editReaderInfo}/>\r\n        <ReaderStatistics reader={props.reader} setActiveModal={props.setActiveModal} />\r\n    </Group>\r\n);\r\n\r\nfunction deleteReader (readerId, setActiveModal) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers/' + readerId, {\r\n        method: \"DELETE\"\r\n    }).then(response => setActiveModal(null))\r\n}\r\n\r\nconst ReaderModalPage = props => {\r\n    const [reader, setReader] = useState(null);\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setReader(data[0]));\r\n    }, [props.readerId, editInfo]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose} settlingHeight={100}>\r\n            <ModalPageHeader\r\n                left={\r\n                    editInfo ? \r\n                    <PanelHeaderBack onClick={() => setEditInfo(false)}/> : \r\n                    '' \r\n                }\r\n                right={\r\n                    editInfo ?\r\n                        confirmDelete ? \r\n                        <>\r\n                            <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                            <PanelHeaderEdit isActive onClick={() => deleteReader(reader.Id, props.setActiveModal)}/>\r\n                        </> :\r\n                        <PanelHeaderButton onClick={() => setConfirmDelete(true)}>Удалить</PanelHeaderButton> :\r\n                    ''\r\n                }\r\n                >\r\n                {reader ?\r\n                `${reader.Surname} ${reader.Name} ${reader.Mid_name ?? ''}` :\r\n                ''\r\n                }\r\n            </ModalPageHeader>\r\n            {reader ? \r\n                editInfo ?\r\n                <EditReaderInfo reader={reader}/> :\r\n                <ReaderModalPageContent canEditInfo={true} reader={reader} editReaderInfo={() => setEditInfo(true)} setActiveModal={props.setActiveModal} /> :\r\n            ''}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ReaderModalPage","import { Group, InfoRow, SimpleCell } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nexport const Book = ({ book, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Авторы' style={{ marginBottom: 10 }}>{book.Authors}</InfoRow>\r\n            <InfoRow header='Название книги'>{book.Title}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderBooksList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(book => <Book key={book.Id} book={book} indicator={`Год издания: ${book.Publication_year}`}/>)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderBooksList","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst IssuedBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedBooksModalPage;\r\n","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, {useState, useEffect} from 'react'\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst LostBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books?status=lost`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Потерянные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default LostBooksModalPage","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, {useState} from 'react'\r\nimport { EditReaderInformationForm } from './createReader';\r\n\r\nconst AddReaderModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Добавить читателя</ModalPageHeader>\r\n            {placeholder ?? <EditReaderInformationForm props={props.props ?? props} setPlaceholder={setPlaceholder}/>}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default AddReaderModalPage;","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ReaderRoleInformation } from '../ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage'\r\n\r\nconst UserInformationModalPage = props => {\r\n    const [reader, setReader] = useState(null)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/' + props.reader.Id)\r\n    .then(response => response.json())\r\n    .then(({data}) => setReader(data[0]))\r\n    .catch(error => console.error(error)), [props.reader]\r\n    )\r\n\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Информация о пользователе</ModalPageHeader>\r\n            {reader ? <ReaderRoleInformation reader={reader}/> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default UserInformationModalPage","import React from 'react';\r\nimport { Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\n\r\nexport function TimestampToDate (timestamp) {\r\n    let date = new Date(timestamp * 1000)\r\n    return `${date.getDate()}.${('0' + (date.getMonth() + 1)).slice(-2)}.${date.getFullYear()}`\r\n}\r\n\r\nconst Infraction = ({ infraction, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Нарушение' style={{ marginBottom: 10 }}>{infraction.Infraction}</InfoRow>\r\n            <InfoRow header='Дата выдачи'>{TimestampToDate(infraction.Issue_date)}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderInfractionsList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(infraction => <Infraction key={infraction.Num} infraction={infraction} indicator={infraction.Is_active ? 'Активно' : ''} />)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderInfractionsList","import React, {useState, useEffect} from 'react'\r\nimport {ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst IssuedInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedInfractionsModalPage","import React, {useState, useEffect} from 'react'\r\nimport { ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst ActiveInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions?is_active=true`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ActiveInfractionsModalPage","import { ModalRoot } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ReaderModalPage from './ReaderModalPage/ReaderModalPage';\r\nimport IssuedBooksModalPage from '../../../ModalPages/BooksModalPages/IssuedBooksModalPage';\r\nimport LostBooksModalPage from '../../../ModalPages/BooksModalPages/LostBooksList';\r\nimport AddReaderModalPage from './AddReaderModalPage/AddReaderModalPage';\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal';\r\nimport IssuedInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/IssuedInfractionsModalPage'\r\nimport ActiveInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/ActiveInfractionsModalPage'\r\n\r\nconst AdminModals = props => {\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={() => props.setActiveModal(null)}>\r\n            <AddReaderModalPage id='addReader' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal}/>\r\n            <ReaderModalPage id='readerInfo' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal} readerId={props.readerId} />\r\n            <IssuedBooksModalPage id='issuedBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <LostBooksModalPage id='lostBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <IssuedInfractionsModalPage id='issuedInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <ActiveInfractionsModalPage id='activeInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <UserInformationModalPage id='userInformation' onClose={() => props.setActiveModal(null)} reader={props.user} setActiveModal={props.setActiveModal}/>\r\n        </ModalRoot>\r\n    );\r\n};\r\n\r\nexport default AdminModals","import { View, PanelHeader, Panel, Group, FormLayout, PanelSpinner, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminReaders from './AdminReaders/AdminReaders'\r\nimport AdminModals from './AdminModals/AdminModals'\r\nimport {ReaderListFromCells} from './AdminReaders/AdminReaders'\r\nimport InputGroup from '../../../CustomComponents/FormComponents/InputGroup'\r\nimport UniversityInfoSelect from './ReaderListContent/FilterQuery/Selects/UniversityInfoSelect'\r\nimport FormButton from '../../../CustomComponents/FormComponents/FormButton'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons'\r\nconst DebtorsFilter = ({setBody}) => {\r\n    const [debtPeriod, setDebtPeriod] = useState(10)\r\n    const [libraryPoint, setLibraryPoint] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    function onClick () {\r\n        setBody({\r\n            debtPeriod: debtPeriod !== '' ? debtPeriod : null,\r\n            libraryPoint: libraryPoint !== '' ? libraryPoint : null,\r\n            faculty: faculty !== '' ? faculty : null,\r\n            department: department !== '' ? department : null,\r\n            group: group !== '' ? group : null,\r\n            role: role !== '' ? role : null,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'debtPeriod': {\r\n                    value: debtPeriod,\r\n                    placeholder: 'Введите период задолженности в днях',\r\n                    onChange: setDebtPeriod,\r\n                    type: 'number'\r\n                },\r\n                'libraryPoint': {\r\n                    value: libraryPoint,\r\n                    placeholder: 'Введите название пункта',\r\n                    onChange: setLibraryPoint\r\n                }\r\n            }} mode='horizontal'/>\r\n            <UniversityInfoSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup}\r\n                role={role} setRole={setRole}\r\n                universityMode='horizontal'\r\n                />\r\n            <FormButton onClick={onClick} disabled={debtPeriod < 0} size='l' stretched mode='primary' text='Применить фильтры'/>\r\n        </FormLayout>\r\n    )\r\n\r\n}\r\n\r\nconst AdminDebtors = props => {\r\n    const [body, setBody] = useState({})\r\n    const [debtors, setDebtors] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/debtors', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n        setDebtors(data)\r\n        setLoading(false)\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        setLoading(false)\r\n    }), //eslint-disable-next-line\r\n    [body]\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>Задолжники</PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : debtors\r\n                    ? <DebtorsFilter setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {debtors ? <ReaderListFromCells readerList={debtors} openReaderInfo={props.openReaderInfo}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nconst AdminContent = props => {\r\n    const [readerId, setReaderId] =useState(null)\r\n    const modals = <AdminModals readerId={readerId} activeModal={props.activeModal} setActiveModal={props.setActiveModal} user={props.user}/>\r\n\r\n    function openReaderInfo(readerId) {\r\n        setReaderId(readerId)\r\n        props.setActiveModal('readerInfo')\r\n    }\r\n\r\n    return (\r\n        <View id={props.id} activePanel={props.activePanel} modal={modals}>\r\n            <AdminReaders id='adminReaders' openReaderInfo={openReaderInfo} addReaderButtonClick={() => props.setActiveModal('addReader')}/>\r\n            <AdminDebtors id='adminDebtors' openReaderInfo={openReaderInfo}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AdminContent","import { Group, Header, Panel, PanelHeader, SimpleCell } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon24NotebookCheckOutline } from '@vkontakte/icons';\r\n\r\nconst RenderPointsList = props => {\r\n    return (\r\n        <Group mode='plain' header={<Header>Найдено: {props.data?.count}</Header>}>\r\n        {props.data?.data.map(\r\n            point => <SimpleCell disabled={props.disabled} onClick={() => props.openPointInfo(point)} indicator={point.Can_issue_books ? 'Может выдавать книги' : ''} key={point.Name}>{point.Name}</SimpleCell>)}\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst LibraryPoints = props => {\r\n    const [points, setPoints] = useState(null)\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/library')\r\n        .then(response => response.json())\r\n        .then(data => setPoints(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>\r\n                Библиотечные пункты\r\n            </PanelHeader>\r\n            <Group>\r\n                {userIsAdmin ? <SimpleCell onClick={props.openStatistics} indicator={<Icon24NotebookCheckOutline/>}>Статистика по библиотеке</SimpleCell> : null}\r\n                {points ? <RenderPointsList disabled={!userIsAdmin} openPointInfo={props.openPointInfo} data={points}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default LibraryPoints","import { Icon36ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport { Panel, PanelHeader, Group, SimpleCell, InfoRow, PanelSpinner, Header, Text, PanelHeaderButton, FormLayout, FormLayoutGroup, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst Book = ({book, onClick}) => {\r\n    return (\r\n        <Group mode='plain'>\r\n            <SimpleCell\r\n                indicator={<Icon36ChevronRightOutline/>}\r\n                multiline\r\n                onClick={() => onClick(book)}\r\n                description={`Доступно: ${book.Available ?? 0}`}>\r\n                <InfoRow header={book.Authors}><Text weight='semibold'>{book.Title}</Text ></InfoRow>\r\n            </SimpleCell>\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst PublicRenderBooks = ({header, books, onClick}) => (\r\n    <Group header={header} mode='plain'>\r\n        {books ? books.map((book, i) => <Book key={i} book={book} onClick={onClick} />) : ''}\r\n    </Group>\r\n)\r\n\r\nconst PublicBooksList = (props) => (\r\n    <Group mode='plain'>\r\n        <FormLayout>\r\n            <FormLayoutGroup mode='horizontal'>\r\n                <FormButton size='l' stretched text='Топ книг' onClick={() => props.setActiveModal('booksOrdersTop')}/>\r\n                <FormButton size='l' stretched text='Заказы за период' onClick={() => props.setActiveModal('booksOrdersPeriod')}/>\r\n            </FormLayoutGroup>\r\n        </FormLayout>\r\n        <PublicRenderBooks books={props.books} onClick={props.onClick} header={<Header>Найдено: {props.count}</Header>} />\r\n    </Group>\r\n)\r\n\r\nconst Books = props => {\r\n    const [page, setPage] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const userIsAdministrator = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setPage(<PublicBooksList setActiveModal={props.setActiveModal} count={data.count} books={data.data} onClick={props.openBookInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setPage(<Placeholder header='Ошибка при получении данных' icon={<Icon56ErrorOutline/>}/>)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={userIsAdministrator ? <PanelHeaderButton onClick={props.addBookButtonClick}>Добавить книгу</PanelHeaderButton> : null}>Список книг</PanelHeader>\r\n            <Group>\r\n                {loading ? <PanelSpinner height={96} size='large'/> : page}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default Books","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../CustomComponents/FormComponents/InputGroup';\r\n\r\nfunction createBook(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/books', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.ok ?\r\n        setPlaceholder(<Placeholder header='Книга добавлена' />) :\r\n        setPlaceholder(<Placeholder header='Не удалось добавить книгу в каталог' />\r\n        ));\r\n}\r\n\r\nexport const EditBookInfoForm = ({ props, setPlaceholder }) => {\r\n    const [title, setTitle] = useState(props.title ?? '');\r\n    const [authors, setAuthors] = useState(props.authors ?? '');\r\n    const [publisher, setPublisher] = useState(props.publisher ?? '');\r\n    const [publicationYear, setPublicationYear] = useState(props.publicationYear ?? 0);\r\n\r\n    const onClick = () => {\r\n        let body = {\r\n            title: document.getElementsByName('add_title')[0].value,\r\n            authors: document.getElementsByName('add_authors')[0].value,\r\n            publisher: document.getElementsByName('add_publisher')[0].value,\r\n            publicationYear: document.getElementsByName('add_publicationYear')[0].value\r\n        };\r\n\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createBook(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'add_title': {\r\n                    value: title,\r\n                    onChange: setTitle,\r\n                    placeholder: 'Название книги',\r\n                    required: true\r\n                },\r\n                'add_authors': {\r\n                    value: authors,\r\n                    onChange: setAuthors,\r\n                    placeholder: 'Авторы',\r\n                    required: true\r\n                },\r\n                'add_publisher': {\r\n                    value: publisher,\r\n                    onChange: setPublisher,\r\n                    placeholder: 'Издательство',\r\n                    required: true\r\n                },\r\n                'add_publicationYear': {\r\n                    status: publicationYear > 0 ? 'default' : 'error',\r\n                    value: publicationYear,\r\n                    onChange: setPublicationYear,\r\n                    placeholder: 'Год издания',\r\n                    required: true,\r\n                    type: 'number'\r\n                },\r\n            }} />\r\n            <FormButton\r\n                disabled={!(title && authors && publisher && publicationYear > 0)}\r\n                mode='primary'\r\n                size='l'\r\n                text={props.text ?? 'Добавить книгу'}\r\n                onClick={onClick}\r\n                stretched />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\n\r\nconst AdminAddBookModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>\r\n                Добавить книгу в библиотечный каталог\r\n            </ModalPageHeader>\r\n            {placeholder ?\r\n                placeholder :\r\n                <EditBookInfoForm props={props} setPlaceholder={setPlaceholder}/>\r\n                }\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default AdminAddBookModalPage;","import { TimestampToDate } from '../../../ModalPages/InfractionsModalPages/RenderInfractionsList';\r\nimport { Group, SimpleCell, Header, InfoRow, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\nimport ErrorPlaceholder from '../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { Icon28ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst BookStatistics = ({ book }) => {\r\n    const [issueLog, setIssueLog] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/issue-logs?book_id=' + book.Id)\r\n        .then(response => response.json())\r\n        .then(data => setIssueLog(data)), [book]\r\n    );\r\n\r\n    return (\r\n        issueLog ?\r\n            <Group header={<Header>Выдано экземпляров: {issueLog.count}</Header>}>\r\n                {issueLog.data.map(\r\n                    log => <SimpleCell\r\n                        multiline\r\n                        description={`Должен вернуть ${TimestampToDate(log.Return_date)}`}\r\n                        indicator={new Date(log.Return_date*1000) < new Date() ? <Icon28ErrorOutline/> : null}\r\n                    >\r\n                        <InfoRow header={`ID читателя: ${log.Id}`}>\r\n                            {log.Surname} {log.Name}\r\n                        </InfoRow>\r\n                    </SimpleCell>\r\n                )}\r\n            </Group> : null\r\n    );\r\n};\r\nexport const BookInformation = props => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    function updateBookInformation(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + props.book.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n    return (\r\n        placeholder ??\r\n        <Group>\r\n            <EditBookInfoForm props={{\r\n                title: props.book.Title,\r\n                authors: props.book.Authors,\r\n                publisher: props.book.Publisher,\r\n                publicationYear: props.book.Publication_year,\r\n                text: 'Изменить информацию',\r\n                onClick: updateBookInformation\r\n            }} />\r\n            <BookStatistics book={props.book} />\r\n        </Group>\r\n    );\r\n};\r\n","import { Icon16InfoOutline, Icon28ChevronRightOutline } from '@vkontakte/icons';\r\nimport { ModalPage, ModalPageHeader, Group, SimpleCell, IconButton, PanelHeaderBack, PanelHeaderClose, PanelHeaderSubmit, PanelHeaderButton } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BookInformation } from './BookStatistics';\r\n\r\nconst Publication = ({ userIsAdmin, publication, openBookInfo, openLibraryPointInfo }) => {\r\n    return (\r\n        <SimpleCell\r\n            disabled\r\n            before={userIsAdmin ? <IconButton onClick={() => openBookInfo(publication)}><Icon16InfoOutline/></IconButton> : ''}\r\n            after={publication.Available ? <IconButton onClick={() => openLibraryPointInfo(publication.Library_point, publication)}><Icon28ChevronRightOutline /></IconButton> : null}\r\n            multiline\r\n            description={`Доступно: ${publication.Available ?? 0}, издание ${publication.Publication_year} года`}\r\n        >\r\n            {publication.Library_point}\r\n        </SimpleCell>\r\n    );\r\n};\r\n\r\nconst Publications = ({userIsAdmin, publications, openLibraryPointInfo, openBookInfo}) => {\r\n    return (\r\n        <Group>\r\n            {publications.data.map(\r\n                (publication, i) => <Publication\r\n                                        userIsAdmin={userIsAdmin} \r\n                                        key={i} \r\n                                        publication={publication} \r\n                                        openBookInfo={openBookInfo} \r\n                                        openLibraryPointInfo={openLibraryPointInfo}\r\n                                    />)}\r\n        </Group>\r\n    );\r\n};\r\nexport const BookInfoModalPage = props => {\r\n    const [publications, setPublications] = useState(null);\r\n    const [activeBook, setActiveBook] = useState(null)\r\n    const [bookInformation, setBookInformation] = useState(null)\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n    \r\n    function deleteBook () {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + activeBook.Id, {\r\n            method: 'DELETE'\r\n        }).then(response => setBookInformation(null))\r\n        setConfirmDelete(false)\r\n    }\r\n\r\n    function openBookInfo (book) {\r\n        setActiveBook(book)\r\n        setBookInformation(<BookInformation book={book}/>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/books/publications?title=${props.book.Title}&authors=${props.book.Authors}`)\r\n            .then(response => response.json())\r\n            .then(data => setPublications(data));\r\n    }, [props.book, bookInformation]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader\r\n                left={bookInformation ? <PanelHeaderBack onClick={() => setBookInformation(null)}/> : null}\r\n                right={bookInformation ?\r\n                        confirmDelete ?\r\n                            <>\r\n                                <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                                <PanelHeaderSubmit onClick={deleteBook}/>\r\n                            </> :\r\n                                <PanelHeaderButton onClick={() => setConfirmDelete(true)}>\r\n                                    Удалить\r\n                                </PanelHeaderButton> :\r\n                        null}\r\n            >{bookInformation ? 'Информация о книге' :  'Пункты с данной книгой в наличии' }</ModalPageHeader>\r\n            {publications ?\r\n            bookInformation ??\r\n            <Publications \r\n                userIsAdmin={userIsAdmin} \r\n                publications={publications} \r\n                openBookInfo={openBookInfo}\r\n                openLibraryPointInfo={props.openLibraryPointInfo} \r\n            /> : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Book } from '../../../ModalPages/BooksModalPages/RenderBooksList';\r\n\r\nconst ReadersList = ({ readers }) => {\r\n    return (\r\n        <Group>\r\n            {readers.map(reader => <SimpleCell disabled multiline>\r\n                <InfoRow key={reader.Id} header={`ID: ${reader.Id}, ${reader.Role}`}>{reader.Surname} {reader.Name}</InfoRow>\r\n            </SimpleCell>)}\r\n        </Group>\r\n    );\r\n};\r\n\r\nexport const BooksList = ({books}) => (\r\n    <Group>\r\n        {books.map(book => <Book book={book} key={book.Id} indicator={`Заказов: ${book.Taken}`}/>)}\r\n    </Group>\r\n)\r\n\r\nexport const AdditionalLibraryPointInfo = props => {\r\n    const [readers, setReaders] = useState(null);\r\n    const [ordersTop, setOrdersTop] = useState(null);\r\n    const [currentList, setCurrentList] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + `/library/${props.point.Name}/readers`)\r\n        .then(response => response.json())\r\n        .then(data => setReaders(data))\r\n        .catch(error => console.error(error)),\r\n        [props.point]\r\n    );\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/orders/top?param=library_point&param_name=' + props.point.Name)\r\n    .then(response => response.json())\r\n    .then(data => setOrdersTop(data)), [props.point]\r\n    )\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>{props.point.Name}</ModalPageHeader>\r\n                <Group>\r\n                    {readers ? <SimpleCell disabled={readers.count === 0} onClick={() => setCurrentList(<ReadersList readers={readers.data} />)} indicator={readers.count}>Открыть список читателей</SimpleCell> : null}\r\n                    {ordersTop ? <SimpleCell disabled={ordersTop.count === 0} onClick={() => setCurrentList(<BooksList books={ordersTop.data}/>)}  indicator={ordersTop.count}>Посмотреть топ заказов</SimpleCell> : null}\r\n                </Group>\r\n                {currentList ?? null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, PanelHeaderBack, PanelSpinner, FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\n\r\nfunction reserveBook(book, point, user, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/' + point.Name + '/reserve', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            bookId: book.Id,\r\n            libraryPoint: point.Name,\r\n            readerId: user.Id,\r\n        })\r\n    })\r\n    .then(response => setPlaceholder(\r\n        response.ok ? <Placeholder header='Экземпляр зарезервирован'/> :\r\n        <Placeholder header='Ошибка при резерве, попробуйте позже'/>)\r\n    )\r\n}\r\n\r\nconst ReserveBookForm = ({ book, point, user, onReserveBook }) => {\r\n    return (\r\n        <Group>\r\n            <SimpleCell disabled description='Название пункта'>{point.Name}</SimpleCell>\r\n            <SimpleCell disabled description='Название книги'>{book.Title}</SimpleCell>\r\n            <SimpleCell disabled description='Авторы'>{book.Authors}</SimpleCell>\r\n            <SimpleCell disabled indicator={book.Available}>Доступно книг</SimpleCell>\r\n            <FormLayout>\r\n                <FormButton\r\n                    stretched\r\n                    mode='primary'\r\n                    disabled={!point.Can_issue_books || user.Role === 'Абитуриент'}\r\n                    onClick={onReserveBook}\r\n                    size='l'\r\n                    text={point.Can_issue_books ?\r\n                        user.Role === 'Абитуриент' ?\r\n                            'Вы не можете резервировать книги' :\r\n                            'Зарезервировать экземпляр'\r\n                        : 'Пункт не может выдавать книги'} />\r\n            </FormLayout>\r\n        </Group>\r\n    );\r\n};\r\nexport const LibraryPointModalPage = props => {\r\n    const [point, setPoint] = useState(null);\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/library/${props.libraryPoint}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setPoint(data[0]))\r\n            .catch(error => console.error(error));\r\n    }, [props.libraryPoint]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal('bookInfo')}>\r\n            <ModalPageHeader left={<PanelHeaderBack onClick={() => props.setActiveModal('bookInfo')} />}>Информация о библиотечном пункте</ModalPageHeader>\r\n            {placeholder ? placeholder :\r\n                <Group>\r\n                    {point ?\r\n                    <ReserveBookForm\r\n                        book={props.book} point={point}\r\n                        user={props.user} \r\n                        onReserveBook={() => reserveBook(props.book, point, props.user, setPlaceholder)}/> :\r\n                    <PanelSpinner size={56} />}\r\n                </Group>\r\n            }\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BooksList } from './AdditionalLibraryPointInfo';\r\nimport StructureSelect from '../../AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect';\r\nimport FormInput from '../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nexport const BooksOrdersTop = props => {\r\n    const [faculty, setFaculty] = useState('');\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + '/books/orders/top?param=' + (faculty !== '' ? 'faculty' : ' ') + '&param_name=' + faculty)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [faculty]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Топ книг по вузу и факультетам</ModalPageHeader>\r\n            <StructureSelect faculty={faculty} setFaculty={setFaculty} facultyOnly />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\nexport const BooksOrderPeriod = props => {\r\n    const [period, setPeriod] = useState(31);\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + `/books/orders?order_period=${period}`)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [period]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Заказанные книги за период в днях: {period}</ModalPageHeader>\r\n            <FormInput value={period} onChange={setPeriod} placeholder='Период заказов, в днях' type='number' required />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalRoot, ModalPageHeader, SimpleCell, PanelSpinner, Group } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal'\r\nimport AdminAddBookModalPage from './AdminAddBookModalPage'\r\nimport { BookInfoModalPage } from './Publication'\r\nimport { AdditionalLibraryPointInfo } from './AdditionalLibraryPointInfo'\r\nimport { LibraryPointModalPage } from './ReserveBookForm'\r\nimport { BooksOrdersTop, BooksOrderPeriod } from './BooksOrdersTop'\r\n\r\nfunction fetchStat(stat_kind, set) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/statistics?stat_kind=' + stat_kind)\r\n    .then(response => response.json())\r\n    .then(data => set(data))\r\n}\r\n\r\nconst Buttons = props =>  (\r\n    <Group>\r\n        <SimpleCell onClick={() => props.setList(props.minReaders)} indicator={props.minReaders?.count}>Пункты с минимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxReaders)} indicator={props.maxReaders?.count}>Пункты с максимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.minDebits)} indicator={props.minDebits?.count}>Пункты с минимальным числом задолжников</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxDebits)} indicator={props.maxDebits?.count}>Пункты с максимальным числом задолжников</SimpleCell>\r\n    </Group>\r\n)\r\n\r\nconst LibraryStatistics = props => {\r\n    const [minReaders, setMinReaders] = useState(null)\r\n    const [maxReaders, setMaxReaders] = useState(null)\r\n    const [minDebits, setMinDebits] = useState(null)\r\n    const [maxDebits, setMaxDebits] = useState(null)\r\n    const [currentStat, setCurrentStat] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        fetchStat('min_debitors', setMinDebits)\r\n        fetchStat('min_readers', setMinReaders)\r\n        fetchStat('max_debitors', setMaxDebits)\r\n        fetchStat('max_readers', setMaxReaders)\r\n        setLoading(false)\r\n    }\r\n    , [])\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Статистика по библиотеке</ModalPageHeader>\r\n            {loading ? <PanelSpinner/> : <Buttons setList={setCurrentStat} minReaders={minReaders} maxReaders={maxReaders} minDebits={minDebits} maxDebits={maxDebits}/>}\r\n            {currentStat ? <Group>{currentStat.data.map(el => <SimpleCell key={el.Name} disabled indicator={el?.Readers ?? el?.Debitors}>{el.Name}</SimpleCell>)}</Group> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nconst PublicModalPages = props => {\r\n    const onClose = () => props.setActiveModal(null)\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={onClose}>\r\n            <BookInfoModalPage user={props.user} id='bookInfo' setActiveModal={props.setActiveModal} book={props.book} openLibraryPointInfo={props.openLibraryPointInfo}/>\r\n            <LibraryPointModalPage id='libraryPointInfo' setActiveModal={props.setActiveModal} book={props.book} libraryPoint={props.libraryPoint} user={props.user}/>\r\n            <AdditionalLibraryPointInfo id='additionalLibraryPoint' setActiveModal={props.setActiveModal} point={props.libraryPoint}/>\r\n            <AdminAddBookModalPage id='addBook' setActiveModal={props.setActiveModal}/>\r\n            <UserInformationModalPage id='userInformation' reader={props.user} onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrdersTop id='booksOrdersTop' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrderPeriod id='booksOrdersPeriod' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <LibraryStatistics id='statistics' onClose={onClose}/>\r\n        </ModalRoot>\r\n    )\r\n}\r\n\r\nexport default PublicModalPages","import { View } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport LibraryPoints from './LibraryPoints';\r\nimport Books from './Books/Books';\r\nimport PublicModalPages from './PublicModalPages/PublicModalPages';\r\n\r\nconst PublicContent = props => {\r\n    const [book, setBook] = useState(null)\r\n    const [libraryPoint, setLibraryPoint] = useState(null)\r\n    const modal = <PublicModalPages\r\n                        activeModal={props.activeModal} \r\n                        setActiveModal={props.setActiveModal} \r\n                        book={book} \r\n                        libraryPoint={libraryPoint} \r\n                        user={props.user} \r\n                        openLibraryPointInfo={openLibraryPointInfo}\r\n                    />\r\n\r\n    function openBookInfo (book) {\r\n        setBook(book)\r\n        props.setActiveModal('bookInfo')\r\n    }\r\n\r\n    function openLibraryPointInfo(libraryPoint, book) {\r\n        setBook(book)\r\n        setLibraryPoint(libraryPoint)\r\n        props.setActiveModal('libraryPointInfo')\r\n    }\r\n    \r\n    function openPointInfo(point) {\r\n        setLibraryPoint(point)\r\n        props.setActiveModal('additionalLibraryPoint')\r\n    }\r\n\r\n    return (\r\n        <View activePanel={props.activePanel} id={props.id} modal={modal}>\r\n            <Books\r\n            setActiveModal={props.setActiveModal}\r\n                id='publicBooks'\r\n                openBookInfo={openBookInfo}\r\n                user={props.user}\r\n                addBookButtonClick={() => props.setActiveModal('addBook')}\r\n            />\r\n            <LibraryPoints\r\n                openStatistics={() => props.setActiveModal('statistics')}\r\n                id='publicLibraryPoints'\r\n                user={props.user}\r\n                openPointInfo={openPointInfo}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PublicContent","import { Root } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport AdminContent from './AdminContent/AdminContent';\r\nimport PublicContent from './PublicContent/PublicContent';\r\n\r\nconst ContentView = props => {\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Root activeView={props.activeView}>\r\n            <PublicContent\r\n                user={props.user}\r\n                id='publicContent'\r\n                activePanel={props.activePanel}\r\n                activeModal={props.activeModal}\r\n                setActiveModal={props.setActiveModal}\r\n            />\r\n            {userIsAdmin ?\r\n                <AdminContent\r\n                    user={props.user}\r\n                    id='adminContent'\r\n                    activePanel={props.activePanel}\r\n                    activeModal={props.activeModal}\r\n                    setActiveModal={props.setActiveModal}\r\n                /> : null\r\n            }\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default ContentView;","import { Cell } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst SideMenuButton = ({panel, activePanel, onClick, cellText, view}) => {\r\n    return (\r\n        <Cell\r\n            key={panel}\r\n            disabled={panel === activePanel}\r\n            style={panel === activePanel ? {\r\n            backgroundColor: \"var(--button_secondary_background)\",\r\n            borderRadius: 8\r\n            } : {}}\r\n            data-view={view}\r\n            data-panel={panel}\r\n            onClick={onClick}\r\n        >\r\n            {cellText}\r\n        </Cell>\r\n    )\r\n}\r\n\r\nexport default SideMenuButton","import { Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport SideMenuButton from '../SideMenuButtons/SideMenuButton'\r\n\r\nconst adminPanels = {\r\n    'adminReaders': 'Читатели',\r\n    'adminDebtors': 'Задолжники'\r\n}\r\n\r\nconst AdminSideButtons = props => (\r\n    <Group mode='plain'>\r\n        {Object.keys(adminPanels).map(panel => <SideMenuButton view='adminContent' key={panel}\r\n            panel={panel} activePanel={props.activePanel}\r\n            onClick={props.onClick} cellText={adminPanels[panel]} />)}\r\n    </Group>\r\n)\r\n\r\nexport default AdminSideButtons","import { Group } from \"@vkontakte/vkui\";\r\nimport SideMenuButton from \"./SideMenuButton\"\r\n\r\nconst publicPanels = {\r\n    'publicBooks': 'Список книг',\r\n    'publicLibraryPoints': 'Библиотечные пункты',\r\n}\r\n\r\nconst PublicSideButtons = ({activePanel, onClick}) => (\r\n    <Group mode='plain'>\r\n    {Object.keys(publicPanels).map(panel => (\r\n        <SideMenuButton\r\n            key={panel}\r\n            panel={panel}\r\n            activePanel={activePanel}\r\n            cellText={publicPanels[panel]}\r\n            onClick={onClick}\r\n            view='publicContent'\r\n        />\r\n        )\r\n    )}\r\n    </Group>\r\n)\r\n\r\nexport default PublicSideButtons;","import { Group } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport AdminSideButtons from '../AdminSideButtons/AdminSideButtons';\r\nimport PublicSideButtons from './PublicSideButtons';\r\n\r\n\r\nconst SideMenuButtons = ({activePanel, onClick, userIsAdmin}) => {\r\n    return (\r\n        <Group mode='plain' separator='auto'>\r\n            <PublicSideButtons activePanel={activePanel} onClick={onClick}/>\r\n            {userIsAdmin ? <AdminSideButtons activePanel={activePanel} onClick={onClick}/> : null} \r\n        </Group>\r\n    )\r\n}\r\n\r\nexport default SideMenuButtons","import { IconButton, SimpleCell, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { Icon24DoorArrowLeftOutline, Icon24UserOutline } from '@vkontakte/icons';\r\n\r\n\r\nconst SideUserInfo = ({user, openUserInfo, onLogout}) => (\r\n    <Group mode='plain' separator='auto'>\r\n        <SimpleCell\r\n            disabled\r\n            multiline\r\n            after={<>\r\n            {openUserInfo ? <IconButton aria-label='Открыть профиль' onClick={openUserInfo}><Icon24UserOutline/></IconButton> : null}\r\n\r\n            <IconButton aria-label='Выход' onClick={onLogout}><Icon24DoorArrowLeftOutline /></IconButton>\r\n            </>}\r\n            description={user.Role}\r\n        >\r\n            {`${user.Surname} ${user.Name}`}\r\n        </SimpleCell>\r\n    </Group>\r\n)\r\n\r\nexport default SideUserInfo;","import React from 'react'\r\nimport {Group, Panel} from '@vkontakte/vkui'\r\nimport SideMenuButtons from './SideMenuButtons/SideMenuButtons'\r\nimport SideUserInfo from './SideUserInfo.js'\r\n\r\nconst SideMenu = props => {\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Panel>\r\n            <Group>\r\n                <SideUserInfo user={props.user} openUserInfo={props.openUserInfo} onLogout={props.onLogout}/>\r\n                <SideMenuButtons activePanel={props.activePanel} onClick={props.onClick} userIsAdmin={userIsAdmin}/>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default SideMenu","import { SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport ContentView from './ContentView/ContentView'\r\nimport SideMenu from './SideMenu/SideMenu'\r\n\r\n\r\n\r\nconst Content = props => {\r\n    const [activeView, setActiveView] = useState('publicContent')\r\n    const [activePanel, setActivePanel] = useState('publicBooks')\r\n    const [activeModal, setActiveModal] = useState(null)\r\n\r\n    const go = e => {\r\n        setActiveView(e.currentTarget.dataset.view)\r\n        setActivePanel(e.currentTarget.dataset.panel)\r\n    }\r\n\r\n    // function openUserInfo () {\r\n    //     setActiveModal('userInformation')\r\n    // }\r\n\r\n    return (\r\n        <SplitLayout style={{justifyContent: 'center'}}>\r\n            <SplitCol fixed width='250px' maxWidth='250px'>\r\n                <SideMenu\r\n                    user={props.user}\r\n                    activePanel={activePanel}\r\n                    onClick={go}\r\n                    onLogout={props.onLogout}\r\n                />\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <ContentView activeModal={activeModal} setActiveModal={setActiveModal} activePanel={activePanel} activeView={activeView} user={props.user} setActivePanel={setActivePanel}/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Content;","import \"@vkontakte/vkui/dist/vkui.css\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport Auth from './Auth/Auth';\r\nimport Content from './Content/Content';\r\n\r\nasync function authUser(username, password) {\r\n    const response = await fetch(process.env.REACT_APP_API_HOST + '/users/auth', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'username': username,\r\n            'password': password\r\n        })\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    return data.data[0]\r\n}\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/users/auth', {method: 'GET'})\r\n        .then(response => response.json())\r\n        .then(({data}) => {\r\n            if (data) setUser(data)\r\n        })\r\n    }, [user])\r\n\r\n    const onLogin = (username, password) => authUser(username, password).then(user => setUser(user))\r\n\r\n    const onLogout = () => setUser(null)\r\n\r\n    return (\r\n        user\r\n        ? <Content onLogout={onLogout} user={user}/>\r\n        : <Auth onButtonClick={onLogin} style={{justifyContent: 'center'}}/>\r\n    )\r\n}\r\n\r\nexport default App","import {ConfigProvider, AdaptivityProvider, AppRoot, Platform} from '@vkontakte/vkui'\nimport App from './App/App'\n\nconst AdaptiveApp = () => {\n  return (\n    <ConfigProvider platform={Platform.VKCOM}>\n        <AdaptivityProvider>\n            <AppRoot>\n                <App />\n            </AppRoot>\n        </AdaptivityProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default AdaptiveApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdaptiveApp from './AdaptiveApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AdaptiveApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}