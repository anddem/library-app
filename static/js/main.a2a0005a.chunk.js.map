{"version":3,"sources":["App/CustomComponents/FormComponents/FormButton.js","App/CustomComponents/FormComponents/FormInput.js","App/CustomComponents/FormComponents/InputGroup.js","App/Auth/SideAuthForm.js","App/Auth/Auth.js","App/CustomComponents/FormComponents/FormSelectList.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/RoleSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Selects/UniversityInfoSelect.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/Inputs/PersonalInfoInput.js","App/Content/ContentView/AdminContent/ReaderListContent/FilterQuery/FilterQuery.js","App/Content/ContentView/AdminContent/AdminReaders/AdminReaders.js","App/CustomComponents/Placeholders/ErrorPlaceholder.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/createReader.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/EditReaderInfo.js","App/Content/ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage.js","App/Content/ModalPages/BooksModalPages/RenderBooksList.js","App/Content/ModalPages/BooksModalPages/IssuedBooksModalPage.js","App/Content/ModalPages/BooksModalPages/LostBooksList.js","App/Content/ContentView/AdminContent/AdminModals/AddReaderModalPage/AddReaderModalPage.js","App/Content/ModalPages/UserInforamtionModal.js","App/Content/ModalPages/InfractionsModalPages/RenderInfractionsList.js","App/Content/ModalPages/InfractionsModalPages/IssuedInfractionsModalPage.js","App/Content/ModalPages/InfractionsModalPages/ActiveInfractionsModalPage.js","App/Content/ContentView/AdminContent/AdminModals/AdminModals.js","App/Content/ContentView/AdminContent/AdminContent.js","App/Content/ContentView/PublicContent/LibraryPoints.js","App/Content/ContentView/PublicContent/Books/Books.js","App/Content/ContentView/PublicContent/PublicModalPages/createBook.js","App/Content/ContentView/PublicContent/PublicModalPages/AdminAddBookModalPage.js","App/Content/ContentView/PublicContent/PublicModalPages/BookStatistics.js","App/Content/ContentView/PublicContent/PublicModalPages/Publication.js","App/Content/ContentView/PublicContent/PublicModalPages/AdditionalLibraryPointInfo.js","App/Content/ContentView/PublicContent/PublicModalPages/ReserveBookForm.js","App/Content/ContentView/PublicContent/PublicModalPages/BooksOrdersTop.js","App/Content/ContentView/PublicContent/PublicModalPages/PublicModalPages.js","App/Content/ContentView/PublicContent/PublicContent.js","App/Content/ContentView/ContentView.js","App/Content/SideMenu/SideMenuButtons/SideMenuButton.js","App/Content/SideMenu/AdminSideButtons/AdminSideButtons.js","App/Content/SideMenu/SideMenuButtons/PublicSideButtons.js","App/Content/SideMenu/SideMenuButtons/SideMenuButtons.js","App/Content/SideMenu/SideUserInfo.js","App/Content/SideMenu/SideMenu.js","App/Content/Content.js","App/App.js","AdaptiveApp.js","index.js"],"names":["FormButton","props","disabled","stretched","mode","onClick","size","text","FormInput","name","status","value","placeholder","onChange","type","required","target","InputGroup","inputs","Object","keys","map","key","AuthSideForm","username","onUsernameChange","password","onPasswordChange","onButtonClick","Auth","useState","setUsername","setPassword","style","width","maxWidth","animate","spaced","icon","header","FormSelectList","values","RoleSelect","roles","setRoles","useEffect","fetch","process","REACT_APP_API_HOST","then","response","json","data","getRolesList","role","setRole","StructureSelect","universityStructure","setUniversityStructure","onDepartmentChange","department","setDepartment","setGroup","getUniversityStructure","faculty","setFaculty","facultyOnly","group","UniversityInfoSelect","universityMode","PersonalInfoInput","lastName","setLastName","firstName","setFirstName","surname","setSurname","FilterQuery","middleName","setMiddleName","onFilterSubmit","e","a","preventDefault","body","setBody","onSubmit","ReaderListFromCells","readerList","openReaderInfo","count","reader","Id","ReaderCell","after","weight","AdminReaders","loading","setLoading","setReaderList","method","JSON","stringify","catch","error","console","id","left","addReaderButtonClick","height","ErrorPlaceholder","EditReaderInformationForm","setPlaceholder","ok","createReader","EditReaderInfo","Name","Surname","Mid_name","Role","Faculty","Department","Group","ReaderStatistics","Issued","indicator","setActiveModal","Lost","Total_infractions","Active_infractions","InformationCell","before","ReaderRoleInformation","canEditInfo","editReaderInfo","ReaderModalPageContent","separator","ReaderModalPage","setReader","editInfo","setEditInfo","confirmDelete","setConfirmDelete","readerId","onClose","settlingHeight","right","isActive","Book","book","multiline","marginBottom","Authors","Title","RenderBooksList","list","Publication_year","IssuedBooksModalPage","booksList","setBooksList","onCLose","LostBooksModalPage","AddReaderModalPage","UserInformationModalPage","TimestampToDate","timestamp","date","Date","getDate","getMonth","slice","getFullYear","Infraction","infraction","Issue_date","RenderInfractionsList","Is_active","Num","IssuedInfractionsModalPage","infractionsList","setInfractionsList","ActiveInfractionsModalPage","AdminModals","activeModal","user","DebtorsFilter","debtPeriod","setDebtPeriod","libraryPoint","setLibraryPoint","AdminDebtors","debtors","setDebtors","AdminContent","setReaderId","modals","activePanel","modal","RenderPointsList","point","openPointInfo","Can_issue_books","LibraryPoints","points","setPoints","userIsAdmin","openStatistics","description","Available","PublicRenderBooks","books","i","PublicBooksList","Books","page","setPage","userIsAdministrator","openBookInfo","addBookButtonClick","EditBookInfoForm","title","setTitle","authors","setAuthors","publisher","setPublisher","publicationYear","setPublicationYear","document","getElementsByName","createBook","AdminAddBookModalPage","BookStatistics","issueLog","setIssueLog","log","Return_date","BookInformation","Publisher","Publication","publication","openLibraryPointInfo","Library_point","Publications","publications","BookInfoModalPage","setPublications","activeBook","setActiveBook","bookInformation","setBookInformation","ReadersList","readers","BooksList","Taken","AdditionalLibraryPointInfo","setReaders","ordersTop","setOrdersTop","currentList","setCurrentList","ReserveBookForm","onReserveBook","LibraryPointModalPage","setPoint","bookId","reserveBook","BooksOrdersTop","top","setTop","BooksOrderPeriod","period","setPeriod","fetchStat","stat_kind","set","Buttons","setList","minReaders","maxReaders","minDebits","maxDebits","LibraryStatistics","setMinReaders","setMaxReaders","setMinDebits","setMaxDebits","currentStat","setCurrentStat","el","Readers","Debitors","PublicModalPages","PublicContent","setBook","ContentView","activeView","SideMenuButton","panel","cellText","view","backgroundColor","borderRadius","data-view","data-panel","adminPanels","AdminSideButtons","publicPanels","PublicSideButtons","SideMenuButtons","SideUserInfo","openUserInfo","onLogout","aria-label","SideMenu","Content","setActiveView","setActivePanel","justifyContent","fixed","currentTarget","dataset","App","setUser","authUser","AdaptiveApp","platform","Platform","VKCOM","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2a0005a.chunk.js","sourcesContent":["import { Button, FormItem } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst FormButton = (props) => (\r\n    <FormItem>\r\n        <Button \r\n            disabled={props.disabled} \r\n            stretched={props.stretched} \r\n            mode={props.mode}\r\n            onClick={props.onClick}\r\n            size={props.size}\r\n        >\r\n                {props.text}\r\n        </Button>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormButton;","import React from 'react';\r\nimport {FormItem, Input} from '@vkontakte/vkui'\r\n\r\nconst FormInput = ({name, status, value, \r\n                    placeholder, onChange,\r\n                    type='text', required}) => (\r\n    <FormItem>\r\n        <Input \r\n            name={name}\r\n            status={status} \r\n            value={value}\r\n            placeholder={placeholder} \r\n            onChange={({ target }) => onChange(target.value)} \r\n            type={type} \r\n            required={required} \r\n        />\r\n    </FormItem>\r\n)\r\n\r\nexport default FormInput","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormInput from './FormInput'\r\nconst InputGroup = ({inputs, mode}) => (\r\n    <FormLayoutGroup mode={mode}>\r\n        {Object.keys(inputs).map(key => <FormInput\r\n                key={key}\r\n                status={inputs[key].status}\r\n                name={key}\r\n                value={inputs[key].value} \r\n                placeholder={inputs[key].placeholder}\r\n                onChange={inputs[key].onChange} \r\n                type={inputs[key].type ? inputs[key].type : 'text'} \r\n                required={inputs[key].required}\r\n            />)}\r\n    </FormLayoutGroup>\r\n)\r\n\r\nexport default InputGroup;","import { FormLayout } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport FormButton from '../CustomComponents/FormComponents/FormButton'\r\nimport InputGroup from '../CustomComponents/FormComponents/InputGroup'\r\n\r\nconst AuthSideForm = props => {\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'username': {\r\n                    'value': props.username,\r\n                    'placeholder': \"Имя пользователя\",\r\n                    'onChange': props.onUsernameChange,\r\n                    'required': true\r\n                },\r\n                'password': {\r\n                    'value': props.password,\r\n                    'placeholder': \"Пароль\",\r\n                    'onChange': props.onPasswordChange,\r\n                    'required': true,\r\n                    'type': 'password'\r\n                }\r\n                }\r\n            }/>\r\n            <FormButton text=\"Вход\" mode='primary' stretched onClick={props.onButtonClick}/>\r\n        </FormLayout>\r\n    )\r\n}\r\n\r\nexport default AuthSideForm;","import { Placeholder, Spacing, SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport AuthSideForm from './SideAuthForm'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst Auth = props => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onButtonClick = () => props.onButtonClick(username, password)\r\n    \r\n    return (\r\n        <SplitLayout style={props.style}>\r\n            <SplitCol width='250px' maxWidth='250px'>\r\n                <Spacing/>\r\n                <AuthSideForm username={username} password={password} onUsernameChange={setUsername} onPasswordChange={setPassword} onButtonClick={onButtonClick}/>\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <Placeholder icon={<Icon56ErrorOutline/>} stretched header='Для доступа к приложению необходимо авторизоваться'/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React from 'react'\r\nimport {NativeSelect, FormItem} from '@vkontakte/vkui'\r\n\r\nconst FormSelectList = props => (\r\n    <FormItem>\r\n        <NativeSelect\r\n            required={props.required}\r\n            status={props.status}\r\n            placeholder={props.placeholder}\r\n            name={props.name}\r\n            value={props.value}\r\n            onChange={({ target }) => props.onChange(target.value)}\r\n        >\r\n            {props.values.map(value => <option key={value} value={value}>{value}</option>)}\r\n        </NativeSelect>\r\n    </FormItem>\r\n)\r\n\r\nexport default FormSelectList","import React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getRolesList(setRoles) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/roles')\r\n        .then(response => response.json())\r\n        .then(({data}) => setRoles(data))\r\n}\r\n\r\nconst RoleSelect = props => {\r\n    const [roles, setRoles] = useState('')\r\n\r\n    useEffect(() => getRolesList(setRoles), [])\r\n\r\n    return (\r\n        <FormSelectList\r\n            status={props.status}\r\n            required={props.required}\r\n            name={props.name}\r\n            values={roles ? Object.keys(roles) : []}\r\n            value={props.role}\r\n            onChange={props.setRole}\r\n            placeholder='Выберите должность'\r\n        />\r\n    )\r\n}\r\n\r\nexport default RoleSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormSelectList from '../../../../../../CustomComponents/FormComponents/FormSelectList'\r\n\r\nfunction getUniversityStructure(setUniversityStructure) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/university')\r\n    .then(response => response.json())\r\n    .then(({data}) => setUniversityStructure(data))\r\n}\r\n\r\nconst StructureSelect = (props) => {\r\n    const [universityStructure, setUniversityStructure] = useState('')\r\n\r\n    useEffect(() => getUniversityStructure(setUniversityStructure), [])\r\n\r\n    function onFacultyChange (faculty) {\r\n        props.setFaculty(faculty)\r\n        if (props.facultyOnly) return\r\n        onDepartmentChange(\"\")\r\n    }\r\n    \r\n    function onDepartmentChange (department) {\r\n        props.setDepartment(department)\r\n        props.setGroup('')\r\n    }\r\n    \r\n\r\n    return (\r\n        <FormLayoutGroup mode={props.mode}>\r\n            <FormSelectList\r\n                required={props.required}\r\n                status={props.status}\r\n                name=\"faculty\"\r\n                values={Object.keys(universityStructure)}\r\n                value={props.faculty}\r\n                onChange={onFacultyChange}\r\n                placeholder=\"Выберите факультет\"\r\n            />\r\n            {\r\n                !props.facultyOnly && props.faculty ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"department\"\r\n                    values={Object.keys(universityStructure[props.faculty])}\r\n                    value={props.department}\r\n                    onChange={onDepartmentChange}\r\n                    placeholder=\"Выберите кафедру\"\r\n                /> : ''\r\n            }\r\n            {\r\n                props.department ?\r\n                <FormSelectList\r\n                    required={props.required}\r\n                    status={props.status}\r\n                    name=\"group\"\r\n                    values={universityStructure[props.faculty][props.department]}\r\n                    value={props.group}\r\n                    onChange={props.setGroup}\r\n                    placeholder='Выберите группу'\r\n                /> : ''\r\n            }\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default StructureSelect","import { FormLayoutGroup } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport RoleSelect from './RoleSelect'\r\nimport StructureSelect from './StructureSelect'\r\n\r\nconst UniversityInfoSelect = (props) => {\r\n    return (\r\n        <FormLayoutGroup>\r\n            <RoleSelect role={props.role} setRole={props.setRole}/>\r\n            <StructureSelect \r\n                mode={props.universityMode} \r\n                faculty={props.faculty} setFaculty={props.setFaculty} facultyOnly={props.facultyOnly}\r\n                department={props.department} setDepartment={props.setDepartment}\r\n                group={props.group} setGroup={props.setGroup}\r\n            />\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default UniversityInfoSelect","import { FormLayoutGroup} from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport FormInput from '../../../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nconst PersonalInfoInput = (props) => {\r\n    return (\r\n        <FormLayoutGroup mode='horizontal'>\r\n            <FormInput name='lastName' placeholder='Фамилия' value={props.lastName} onChange={props.setLastName}/>\r\n            <FormInput name='firstName' placeholder='Имя' value={props.firstName} onChange={props.setFirstName}/>\r\n            <FormInput name='surname' placeholder='Отчество' value={props.surname} onChange={props.setSurname}/>\r\n        </FormLayoutGroup>\r\n    )\r\n}\r\n\r\nexport default PersonalInfoInput","import { FormLayout } from '@vkontakte/vkui'\r\nimport React, {useState} from 'react'\r\nimport UniversityInfoSelect from './Selects/UniversityInfoSelect'\r\nimport PersonalInfoInput from './Inputs/PersonalInfoInput'\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst FilterQuery = props => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n\r\n    const [role, setRole] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n\r\n    async function onFilterSubmit (e) {\r\n        e.preventDefault()\r\n\r\n        let body = {}\r\n\r\n        if (firstName) body['firstName'] = firstName\r\n        if (lastName) body['lastName'] = lastName\r\n        if (middleName) body['middleName'] = middleName\r\n        if (role) body['role'] = role\r\n        if (faculty) body['faculty'] = faculty\r\n        if (department) body['department'] = department\r\n        if (group) body['group'] = group\r\n        \r\n        props.setBody(body)\r\n    }\r\n\r\n    return (\r\n            <FormLayout name='filterQuery' onSubmit={onFilterSubmit}>\r\n                <PersonalInfoInput\r\n                    firstName={firstName} setFirstName={setFirstName}\r\n                    lastName={lastName} setLastName={setLastName}\r\n                    surname={middleName} setSurname={setMiddleName}\r\n                />\r\n                <UniversityInfoSelect\r\n                    role={role} setRole={setRole}\r\n                    faculty={faculty} setFaculty={setFaculty}\r\n                    department={department} setDepartment={setDepartment}\r\n                    group={group} setGroup={setGroup}\r\n                />\r\n                <FormButton stretched mode='primary' onClick={onFilterSubmit} size='l' text='Применить фильтр'/>\r\n            </FormLayout>\r\n    )\r\n}\r\n\r\nexport default FilterQuery;","import { Group, Header, Headline, Panel, PanelHeader, PanelHeaderButton, PanelSpinner, Placeholder, SimpleCell} from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon28ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport FilterQuery from '../ReaderListContent/FilterQuery/FilterQuery'\r\n\r\nconst AdminReaders = props => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [body, setBody] = useState({})\r\n    const [readerList, setReaderList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API_HOST}/readers/query`, {\r\n            method: 'POST', body: JSON.stringify(body)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            setReaderList(<ReaderListFromCells readerList={data} openReaderInfo={props.openReaderInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [body])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={<PanelHeaderButton onClick={props.addReaderButtonClick}>Добавить читателя</PanelHeaderButton>}>\r\n                Список читателей\r\n            </PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : readerList\r\n                    ? <FilterQuery setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {readerList}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport const ReaderListFromCells = ({readerList, openReaderInfo}) => (\r\n    <Group header={<Header>Найдено: {readerList.count}</Header>} mode='plain'>\r\n        {readerList?.data.map(reader => <ReaderCell key={reader.Id} reader={reader} openReaderInfo={openReaderInfo}/>)}\r\n    </Group>\r\n)\r\n\r\n\r\nconst ReaderCell = ({reader, openReaderInfo}) => {\r\n    return (\r\n        <SimpleCell after={<Icon28ChevronRightOutline/>} onClick={() => openReaderInfo(reader.Id)}>\r\n            <Headline weight='medium'>{`${reader['Surname']} ${reader['Name']} ${reader['Mid_name'] ?? ''}`}</Headline>\r\n        </SimpleCell>\r\n    )\r\n}\r\n\r\nexport default AdminReaders;","import React from 'react'\r\nimport {Placeholder} from '@vkontakte/vkui'\r\nimport {Icon56SettingsOutline} from '@vkontakte/icons'\r\n\r\nconst ErrorPlaceholder = ({header = 'Ошибка при получении данных'}) => {\r\n    return (\r\n      <Placeholder\r\n        icon={<Icon56SettingsOutline/>}\r\n        header={header}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ErrorPlaceholder;","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../../CustomComponents/FormComponents/InputGroup';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport RoleSelect from '../../ReaderListContent/FilterQuery/Selects/RoleSelect';\r\nimport StructureSelect from '../../ReaderListContent/FilterQuery/Selects/StructureSelect';\r\n\r\nfunction createReader(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    })\r\n        .then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Читатель зарегистрирован' />) :\r\n            setPlaceholder(<Placeholder header='Ошибка при регистрации читателя' />))\r\n        .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n}\r\n\r\nexport const EditReaderInformationForm = ({ props, setPlaceholder }) => {\r\n\r\n    const [firstName, setFirstName] = useState(props.firstName);\r\n    const [lastName, setLastName] = useState(props.lastName);\r\n    const [middleName, setMiddleName] = useState(props.middleName);\r\n\r\n    const [role, setRole] = useState(props.role);\r\n    const [faculty, setFaculty] = useState('');\r\n    const [department, setDepartment] = useState('');\r\n    const [group, setGroup] = useState('');\r\n\r\n    const onButtonClick = () => {\r\n        if (!role)\r\n            return;\r\n        let body = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            middleName: middleName !== '' ? middleName : null,\r\n            role: role,\r\n            faculty: faculty === '' ? null : faculty,\r\n            department: department === '' ? null : department,\r\n            group: group === '' ? null : group\r\n        };\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createReader(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout name='addReader'>\r\n            <InputGroup\r\n                inputs={{\r\n                    'addReaderLasttName': {\r\n                        'value': lastName,\r\n                        'onChange': setLastName,\r\n                        'placeholder': 'Фамилия',\r\n                        'required': true\r\n                    },\r\n                    'addReaderFirstName': {\r\n                        'value': firstName,\r\n                        'onChange': setFirstName,\r\n                        'placeholder': 'Имя',\r\n                        'required': true\r\n                    },\r\n                    'addReaderMiddleName': {\r\n                        'value': middleName,\r\n                        'onChange': setMiddleName,\r\n                        'placeholder': 'Отчество'\r\n                    }\r\n                }} mode='horizontal' />\r\n            <RoleSelect role={role} setRole={setRole} required status={role ? 'valid' : 'error'} />\r\n            <StructureSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup} />\r\n            <FormButton stretched mode='primary' onClick={onButtonClick} size='l' text={props.text ?? 'Зарегистрировать'} />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ErrorPlaceholder from '../../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { EditReaderInformationForm } from \"../AddReaderModalPage/createReader\";\r\n\r\nexport const EditReaderInfo = ({ reader }) => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n    function onClick(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/readers/' + reader.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация успешно обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n\r\n    return (\r\n        placeholder ??\r\n        <EditReaderInformationForm props={{\r\n            firstName: reader.Name,\r\n            lastName: reader.Surname,\r\n            middleName: reader.Mid_name ?? '',\r\n            role: reader.Role,\r\n            faculty: reader.Faculty ?? '',\r\n            department: reader.Department ?? '',\r\n            group: reader.Group ?? '',\r\n            onClick: onClick,\r\n            text: 'Обновить информацию'\r\n        }} />\r\n    );\r\n};\r\n","import { Icon20ChevronRightOutline } from '@vkontakte/icons';\r\nimport { CellButton, Group, Header, ModalPage, ModalPageHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderClose, PanelHeaderEdit, SimpleCell } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { EditReaderInfo } from './EditReaderInfo';\r\n\r\nconst ReaderStatistics = props => (\r\n    <Group header={<Header>Статистика</Header>} mode='card'>\r\n        <InformationCell\r\n            after={props.reader.Issued ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Issued ?? 0}\r\n            text='Книг на руках'\r\n            onClick={() => props.setActiveModal('issuedBooksList')}\r\n            disabled={!props.reader.Issued}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Lost ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Lost ?? 0}\r\n            onClick={() => props.setActiveModal('lostBooksList')}\r\n            text='Потеряно книг'\r\n            disabled={!props.reader.Lost}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Total_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Total_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('issuedInfractionsList')}\r\n            text='Нарушений'\r\n            disabled={!props.reader.Total_infractions}\r\n        />\r\n        <InformationCell\r\n            after={props.reader.Active_infractions ? <Icon20ChevronRightOutline /> : null}\r\n            indicator={props.reader.Active_infractions ?? 0}\r\n            onClick={() => props.setActiveModal('activeInfractionsList')}\r\n            text='Из них активных'\r\n            disabled={!props.reader.Active_infractions}\r\n        />\r\n    </Group>\r\n);\r\nconst InformationCell = (props) => (\r\n    props.indicator !== null ?\r\n        <SimpleCell before={props.before} after={props.after} disabled={props.disabled} indicator={props.indicator} onClick={props.onClick}>\r\n            {props.text}\r\n        </SimpleCell> : ''\r\n);\r\nexport const ReaderRoleInformation = ({canEditInfo, reader, editReaderInfo }) => (\r\n    <Group mode='card'>\r\n        <InformationCell disabled indicator={reader.Role} text='Должность' />\r\n        <InformationCell disabled indicator={reader.Faculty} text='Факультет' />\r\n        <InformationCell disabled indicator={reader.Department} text='Кафедра' />\r\n        <InformationCell disabled indicator={reader.Group} text='Группа' />\r\n        {canEditInfo ? <CellButton onClick={editReaderInfo}>Редактировать информацию</CellButton> : null}\r\n    </Group>\r\n);\r\nexport const ReaderModalPageContent = props => (\r\n    <Group separator>\r\n        <ReaderRoleInformation canEditInfo={props.canEditInfo} reader={props.reader} editReaderInfo={props.editReaderInfo}/>\r\n        <ReaderStatistics reader={props.reader} setActiveModal={props.setActiveModal} />\r\n    </Group>\r\n);\r\n\r\nfunction deleteReader (readerId, setActiveModal) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/readers/' + readerId, {\r\n        method: \"DELETE\"\r\n    }).then(response => setActiveModal(null))\r\n}\r\n\r\nconst ReaderModalPage = props => {\r\n    const [reader, setReader] = useState(null);\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setReader(data[0]));\r\n    }, [props.readerId, editInfo]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose} settlingHeight={100}>\r\n            <ModalPageHeader\r\n                left={\r\n                    editInfo ? \r\n                    <PanelHeaderBack onClick={() => setEditInfo(false)}/> : \r\n                    '' \r\n                }\r\n                right={\r\n                    editInfo ?\r\n                        confirmDelete ? \r\n                        <>\r\n                            <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                            <PanelHeaderEdit isActive onClick={() => deleteReader(reader.Id, props.setActiveModal)}/>\r\n                        </> :\r\n                        <PanelHeaderButton onClick={() => setConfirmDelete(true)}>Удалить</PanelHeaderButton> :\r\n                    ''\r\n                }\r\n                >\r\n                {reader ?\r\n                `${reader.Surname} ${reader.Name} ${reader.Mid_name ?? ''}` :\r\n                ''\r\n                }\r\n            </ModalPageHeader>\r\n            {reader ? \r\n                editInfo ?\r\n                <EditReaderInfo reader={reader}/> :\r\n                <ReaderModalPageContent canEditInfo={true} reader={reader} editReaderInfo={() => setEditInfo(true)} setActiveModal={props.setActiveModal} /> :\r\n            ''}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ReaderModalPage","import { Group, InfoRow, SimpleCell } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nexport const Book = ({ book, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Авторы' style={{ marginBottom: 10 }}>{book.Authors}</InfoRow>\r\n            <InfoRow header='Название книги'>{book.Title}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderBooksList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(book => <Book key={book.Id} book={book} indicator={`Год издания: ${book.Publication_year}`}/>)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderBooksList","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, { useState, useEffect } from 'react';\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst IssuedBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedBooksModalPage;\r\n","import { ModalPage, ModalPageHeader, PanelSpinner } from '@vkontakte/vkui';\r\nimport React, {useState, useEffect} from 'react'\r\nimport RenderBooksList from './RenderBooksList';\r\n\r\nconst LostBooksModalPage = props => {\r\n    const [booksList, setBooksList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/books?status=lost`)\r\n            .then(response => response.json())\r\n            .then(data => setBooksList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Потерянные книги {booksList ? `(${booksList.count})` : ''}</ModalPageHeader>\r\n            {booksList ? <RenderBooksList list={booksList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default LostBooksModalPage","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, {useState} from 'react'\r\nimport { EditReaderInformationForm } from './createReader';\r\n\r\nconst AddReaderModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Добавить читателя</ModalPageHeader>\r\n            {placeholder ?? <EditReaderInformationForm props={props.props ?? props} setPlaceholder={setPlaceholder}/>}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default AddReaderModalPage;","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ReaderRoleInformation } from '../ContentView/AdminContent/AdminModals/ReaderModalPage/ReaderModalPage'\r\n\r\nconst UserInformationModalPage = props => {\r\n    const [reader, setReader] = useState(null)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/' + props.reader.Id)\r\n    .then(response => response.json())\r\n    .then(({data}) => setReader(data[0]))\r\n    .catch(error => console.error(error)), [props.reader]\r\n    )\r\n\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Информация о пользователе</ModalPageHeader>\r\n            {reader ? <ReaderRoleInformation reader={reader}/> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default UserInformationModalPage","import React from 'react';\r\nimport { Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\n\r\nexport function TimestampToDate (timestamp) {\r\n    let date = new Date(timestamp * 1000)\r\n    return `${date.getDate()}.${('0' + (date.getMonth() + 1)).slice(-2)}.${date.getFullYear()}`\r\n}\r\n\r\nconst Infraction = ({ infraction, indicator }) => (\r\n    <Group mode='card'>\r\n        <SimpleCell multiline disabled indicator={indicator}>\r\n            <InfoRow header='Нарушение' style={{ marginBottom: 10 }}>{infraction.Infraction}</InfoRow>\r\n            <InfoRow header='Дата выдачи'>{TimestampToDate(infraction.Issue_date)}</InfoRow>\r\n        </SimpleCell>\r\n    </Group>\r\n);\r\nconst RenderInfractionsList = ({ list }) => (\r\n    <Group>\r\n        {list.data.map(infraction => <Infraction key={infraction.Num} infraction={infraction} indicator={infraction.Is_active ? 'Активно' : ''} />)}\r\n    </Group>\r\n);\r\n\r\nexport default RenderInfractionsList","import React, {useState, useEffect} from 'react'\r\nimport {ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst IssuedInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default IssuedInfractionsModalPage","import React, {useState, useEffect} from 'react'\r\nimport { ModalPage, ModalPageHeader, PanelSpinner} from '@vkontakte/vkui'\r\nimport RenderInfractionsList from './RenderInfractionsList';\r\n\r\nconst ActiveInfractionsModalPage = props => {\r\n    const [infractionsList, setInfractionsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/readers/${props.readerId}/infractions?is_active=true`)\r\n            .then(response => response.json())\r\n            .then(data => setInfractionsList(data))\r\n            .catch(error => console.error(error));\r\n    }, [props.readerId]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onCLose}>\r\n            <ModalPageHeader>Выданные нарушения {infractionsList ? `(${infractionsList.count})` : ''}</ModalPageHeader>\r\n            {infractionsList ? <RenderInfractionsList list={infractionsList} /> : <PanelSpinner/>}\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default ActiveInfractionsModalPage","import { ModalRoot } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ReaderModalPage from './ReaderModalPage/ReaderModalPage';\r\nimport IssuedBooksModalPage from '../../../ModalPages/BooksModalPages/IssuedBooksModalPage';\r\nimport LostBooksModalPage from '../../../ModalPages/BooksModalPages/LostBooksList';\r\nimport AddReaderModalPage from './AddReaderModalPage/AddReaderModalPage';\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal';\r\nimport IssuedInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/IssuedInfractionsModalPage'\r\nimport ActiveInfractionsModalPage from '../../../ModalPages/InfractionsModalPages/ActiveInfractionsModalPage'\r\n\r\nconst AdminModals = props => {\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={() => props.setActiveModal(null)}>\r\n            <AddReaderModalPage id='addReader' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal}/>\r\n            <ReaderModalPage id='readerInfo' onClose={() => props.setActiveModal(null)} setActiveModal={props.setActiveModal} readerId={props.readerId} />\r\n            <IssuedBooksModalPage id='issuedBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <LostBooksModalPage id='lostBooksList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <IssuedInfractionsModalPage id='issuedInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <ActiveInfractionsModalPage id='activeInfractionsList' onClose={() => props.setActiveModal('readerInfo')} readerId={props.readerId} />\r\n            <UserInformationModalPage id='userInformation' onClose={() => props.setActiveModal(null)} reader={props.user} setActiveModal={props.setActiveModal}/>\r\n        </ModalRoot>\r\n    );\r\n};\r\n\r\nexport default AdminModals","import { View, PanelHeader, Panel, Group, FormLayout, PanelSpinner, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminReaders from './AdminReaders/AdminReaders'\r\nimport AdminModals from './AdminModals/AdminModals'\r\nimport {ReaderListFromCells} from './AdminReaders/AdminReaders'\r\nimport InputGroup from '../../../CustomComponents/FormComponents/InputGroup'\r\nimport UniversityInfoSelect from './ReaderListContent/FilterQuery/Selects/UniversityInfoSelect'\r\nimport FormButton from '../../../CustomComponents/FormComponents/FormButton'\r\nimport { Icon56ErrorOutline } from '@vkontakte/icons'\r\nconst DebtorsFilter = ({setBody}) => {\r\n    const [debtPeriod, setDebtPeriod] = useState(10)\r\n    const [libraryPoint, setLibraryPoint] = useState('')\r\n    const [faculty, setFaculty] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    function onClick () {\r\n        setBody({\r\n            debtPeriod: debtPeriod !== '' ? debtPeriod : null,\r\n            libraryPoint: libraryPoint !== '' ? libraryPoint : null,\r\n            faculty: faculty !== '' ? faculty : null,\r\n            department: department !== '' ? department : null,\r\n            group: group !== '' ? group : null,\r\n            role: role !== '' ? role : null,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'debtPeriod': {\r\n                    value: debtPeriod,\r\n                    placeholder: 'Введите период задолженности в днях',\r\n                    onChange: setDebtPeriod,\r\n                    type: 'number'\r\n                },\r\n                'libraryPoint': {\r\n                    value: libraryPoint,\r\n                    placeholder: 'Введите название пункта',\r\n                    onChange: setLibraryPoint\r\n                }\r\n            }} mode='horizontal'/>\r\n            <UniversityInfoSelect\r\n                faculty={faculty} setFaculty={setFaculty}\r\n                department={department} setDepartment={setDepartment}\r\n                group={group} setGroup={setGroup}\r\n                role={role} setRole={setRole}\r\n                universityMode='horizontal'\r\n                />\r\n            <FormButton onClick={onClick} disabled={debtPeriod < 0} size='l' stretched mode='primary' text='Применить фильтры'/>\r\n        </FormLayout>\r\n    )\r\n\r\n}\r\n\r\nconst AdminDebtors = props => {\r\n    const [body, setBody] = useState({})\r\n    const [debtors, setDebtors] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/readers/debtors', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n        setDebtors(data)\r\n        setLoading(false)\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        setLoading(false)\r\n    }), //eslint-disable-next-line\r\n    [body]\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>Задолжники</PanelHeader>\r\n            <Group>\r\n                {loading\r\n                ? <PanelSpinner height={96} size='large'/>\r\n                : debtors\r\n                    ? <DebtorsFilter setBody={setBody}/>\r\n                    : <Placeholder icon={<Icon56ErrorOutline/>} header='Ошибка при получении данных'/>}\r\n                {debtors ? <ReaderListFromCells readerList={debtors} openReaderInfo={props.openReaderInfo}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nconst AdminContent = props => {\r\n    const [readerId, setReaderId] =useState(null)\r\n    const modals = <AdminModals readerId={readerId} activeModal={props.activeModal} setActiveModal={props.setActiveModal} user={props.user}/>\r\n\r\n    function openReaderInfo(readerId) {\r\n        setReaderId(readerId)\r\n        props.setActiveModal('readerInfo')\r\n    }\r\n\r\n    return (\r\n        <View id={props.id} activePanel={props.activePanel} modal={modals}>\r\n            <AdminReaders id='adminReaders' openReaderInfo={openReaderInfo} addReaderButtonClick={() => props.setActiveModal('addReader')}/>\r\n            <AdminDebtors id='adminDebtors' openReaderInfo={openReaderInfo}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AdminContent","import { Group, Header, Panel, PanelHeader, SimpleCell } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Icon24NotebookCheckOutline } from '@vkontakte/icons';\r\n\r\nconst RenderPointsList = props => {\r\n    return (\r\n        <Group mode='plain' header={<Header>Найдено: {props.data?.count}</Header>}>\r\n        {props.data?.data.map(\r\n            point => <SimpleCell disabled={props.disabled} onClick={() => props.openPointInfo(point)} indicator={point.Can_issue_books ? 'Может выдавать книги' : ''} key={point.Name}>{point.Name}</SimpleCell>)}\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst LibraryPoints = props => {\r\n    const [points, setPoints] = useState(null)\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/library')\r\n        .then(response => response.json())\r\n        .then(data => setPoints(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>\r\n                Библиотечные пункты\r\n            </PanelHeader>\r\n            <Group>\r\n                {userIsAdmin ? <SimpleCell onClick={props.openStatistics} indicator={<Icon24NotebookCheckOutline/>}>Статистика по библиотеке</SimpleCell> : null}\r\n                {points ? <RenderPointsList disabled={!userIsAdmin} openPointInfo={props.openPointInfo} data={points}/> : null}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default LibraryPoints","import { Icon36ChevronRightOutline, Icon56ErrorOutline } from '@vkontakte/icons'\r\nimport { Panel, PanelHeader, Group, SimpleCell, InfoRow, PanelSpinner, Header, Text, PanelHeaderButton, FormLayout, FormLayoutGroup, Placeholder } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton'\r\n\r\nconst Book = ({book, onClick}) => {\r\n    return (\r\n        <Group mode='plain'>\r\n            <SimpleCell\r\n                indicator={<Icon36ChevronRightOutline/>}\r\n                multiline\r\n                onClick={() => onClick(book)}\r\n                description={`Доступно: ${book.Available ?? 0}`}>\r\n                <InfoRow header={book.Authors}><Text weight='semibold'>{book.Title}</Text ></InfoRow>\r\n            </SimpleCell>\r\n        </Group>\r\n    )\r\n}\r\n\r\nconst PublicRenderBooks = ({header, books, onClick}) => (\r\n    <Group header={header} mode='plain'>\r\n        {books ? books.map((book, i) => <Book key={i} book={book} onClick={onClick} />) : ''}\r\n    </Group>\r\n)\r\n\r\nconst PublicBooksList = (props) => (\r\n    <Group mode='plain'>\r\n        <FormLayout>\r\n            <FormLayoutGroup mode='horizontal'>\r\n                <FormButton size='l' stretched text='Топ книг' onClick={() => props.setActiveModal('booksOrdersTop')}/>\r\n                <FormButton size='l' stretched text='Заказы за период' onClick={() => props.setActiveModal('booksOrdersPeriod')}/>\r\n            </FormLayoutGroup>\r\n        </FormLayout>\r\n        <PublicRenderBooks books={props.books} onClick={props.onClick} header={<Header>Найдено: {props.count}</Header>} />\r\n    </Group>\r\n)\r\n\r\nconst Books = props => {\r\n    const [page, setPage] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const userIsAdministrator = props.user.Role === 'Администратор'\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setPage(<PublicBooksList setActiveModal={props.setActiveModal} count={data.count} books={data.data} onClick={props.openBookInfo}/>)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            setPage(<Placeholder header='Ошибка при получении данных' icon={<Icon56ErrorOutline/>}/>)\r\n            setLoading(false)\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={userIsAdministrator ? <PanelHeaderButton onClick={props.addBookButtonClick}>Добавить книгу</PanelHeaderButton> : null}>Список книг</PanelHeader>\r\n            <Group>\r\n                {loading ? <PanelSpinner height={96} size='large'/> : page}\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default Books","import { FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\nimport InputGroup from '../../../../CustomComponents/FormComponents/InputGroup';\r\n\r\nfunction createBook(body, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/books', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body)\r\n    }).then(response => response.ok ?\r\n        setPlaceholder(<Placeholder header='Книга добавлена' />) :\r\n        setPlaceholder(<Placeholder header='Не удалось добавить книгу в каталог' />\r\n        ));\r\n}\r\n\r\nexport const EditBookInfoForm = ({ props, setPlaceholder }) => {\r\n    const [title, setTitle] = useState(props.title ?? '');\r\n    const [authors, setAuthors] = useState(props.authors ?? '');\r\n    const [publisher, setPublisher] = useState(props.publisher ?? '');\r\n    const [publicationYear, setPublicationYear] = useState(props.publicationYear ?? 0);\r\n\r\n    const onClick = () => {\r\n        let body = {\r\n            title: document.getElementsByName('add_title')[0].value,\r\n            authors: document.getElementsByName('add_authors')[0].value,\r\n            publisher: document.getElementsByName('add_publisher')[0].value,\r\n            publicationYear: document.getElementsByName('add_publicationYear')[0].value\r\n        };\r\n\r\n        if (props.onClick)\r\n            props.onClick(body);\r\n        else\r\n            createBook(body, setPlaceholder);\r\n    };\r\n\r\n    return (\r\n        <FormLayout>\r\n            <InputGroup inputs={{\r\n                'add_title': {\r\n                    value: title,\r\n                    onChange: setTitle,\r\n                    placeholder: 'Название книги',\r\n                    required: true\r\n                },\r\n                'add_authors': {\r\n                    value: authors,\r\n                    onChange: setAuthors,\r\n                    placeholder: 'Авторы',\r\n                    required: true\r\n                },\r\n                'add_publisher': {\r\n                    value: publisher,\r\n                    onChange: setPublisher,\r\n                    placeholder: 'Издательство',\r\n                    required: true\r\n                },\r\n                'add_publicationYear': {\r\n                    status: publicationYear > 0 ? 'default' : 'error',\r\n                    value: publicationYear,\r\n                    onChange: setPublicationYear,\r\n                    placeholder: 'Год издания',\r\n                    required: true,\r\n                    type: 'number'\r\n                },\r\n            }} />\r\n            <FormButton\r\n                disabled={!(title && authors && publisher && publicationYear > 0)}\r\n                mode='primary'\r\n                size='l'\r\n                text={props.text ?? 'Добавить книгу'}\r\n                onClick={onClick}\r\n                stretched />\r\n        </FormLayout>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\n\r\nconst AdminAddBookModalPage = props => {\r\n\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>\r\n                Добавить книгу в библиотечный каталог\r\n            </ModalPageHeader>\r\n            {placeholder ?\r\n                placeholder :\r\n                <EditBookInfoForm props={props} setPlaceholder={setPlaceholder}/>\r\n                }\r\n        </ModalPage>\r\n    );\r\n};\r\n\r\nexport default AdminAddBookModalPage;","import { TimestampToDate } from '../../../ModalPages/InfractionsModalPages/RenderInfractionsList';\r\nimport { Group, SimpleCell, Header, InfoRow, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { EditBookInfoForm } from './createBook';\r\nimport ErrorPlaceholder from '../../../../CustomComponents/Placeholders/ErrorPlaceholder';\r\nimport { Icon28ErrorOutline } from '@vkontakte/icons';\r\n\r\nconst BookStatistics = ({ book }) => {\r\n    const [issueLog, setIssueLog] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/issue-logs?book_id=' + book.Id)\r\n        .then(response => response.json())\r\n        .then(data => setIssueLog(data)), [book]\r\n    );\r\n\r\n    return (\r\n        issueLog ?\r\n            <Group header={<Header>Выдано экземпляров: {issueLog.count}</Header>}>\r\n                {issueLog.data.map(\r\n                    log => <SimpleCell\r\n                        multiline\r\n                        description={`Должен вернуть ${TimestampToDate(log.Return_date)}`}\r\n                        indicator={new Date(log.Return_date*1000) < new Date() ? <Icon28ErrorOutline/> : null}\r\n                    >\r\n                        <InfoRow header={`ID читателя: ${log.Id}`}>\r\n                            {log.Surname} {log.Name}\r\n                        </InfoRow>\r\n                    </SimpleCell>\r\n                )}\r\n            </Group> : null\r\n    );\r\n};\r\nexport const BookInformation = props => {\r\n    const [placeholder, setPlaceholder] = useState(null);\r\n\r\n    function updateBookInformation(body) {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + props.book.Id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body)\r\n        }).then(response => response.ok ?\r\n            setPlaceholder(<Placeholder header='Информация обновлена' />) :\r\n            setPlaceholder(<Placeholder header='Не удалось обновить информацию' />))\r\n            .catch(error => setPlaceholder(<ErrorPlaceholder />));\r\n    }\r\n    return (\r\n        placeholder ??\r\n        <Group>\r\n            <EditBookInfoForm props={{\r\n                title: props.book.Title,\r\n                authors: props.book.Authors,\r\n                publisher: props.book.Publisher,\r\n                publicationYear: props.book.Publication_year,\r\n                text: 'Изменить информацию',\r\n                onClick: updateBookInformation\r\n            }} />\r\n            <BookStatistics book={props.book} />\r\n        </Group>\r\n    );\r\n};\r\n","import { Icon16InfoOutline, Icon28ChevronRightOutline } from '@vkontakte/icons';\r\nimport { ModalPage, ModalPageHeader, Group, SimpleCell, IconButton, PanelHeaderBack, PanelHeaderClose, PanelHeaderSubmit, PanelHeaderButton } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BookInformation } from './BookStatistics';\r\n\r\nconst Publication = ({ userIsAdmin, publication, openBookInfo, openLibraryPointInfo }) => {\r\n    return (\r\n        <SimpleCell\r\n            disabled\r\n            before={userIsAdmin ? <IconButton onClick={() => openBookInfo(publication)}><Icon16InfoOutline/></IconButton> : ''}\r\n            after={publication.Available ? <IconButton onClick={() => openLibraryPointInfo(publication.Library_point, publication)}><Icon28ChevronRightOutline /></IconButton> : null}\r\n            multiline\r\n            description={`Доступно: ${publication.Available ?? 0}, издание ${publication.Publication_year} года`}\r\n        >\r\n            {publication.Library_point}\r\n        </SimpleCell>\r\n    );\r\n};\r\n\r\nconst Publications = ({userIsAdmin, publications, openLibraryPointInfo, openBookInfo}) => {\r\n    return (\r\n        <Group>\r\n            {publications.data.map(\r\n                (publication, i) => <Publication\r\n                                        userIsAdmin={userIsAdmin} \r\n                                        key={i} \r\n                                        publication={publication} \r\n                                        openBookInfo={openBookInfo} \r\n                                        openLibraryPointInfo={openLibraryPointInfo}\r\n                                    />)}\r\n        </Group>\r\n    );\r\n};\r\nexport const BookInfoModalPage = props => {\r\n    const [publications, setPublications] = useState(null);\r\n    const [activeBook, setActiveBook] = useState(null)\r\n    const [bookInformation, setBookInformation] = useState(null)\r\n    const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n    \r\n    function deleteBook () {\r\n        fetch(process.env.REACT_APP_API_HOST + '/books/' + activeBook.Id, {\r\n            method: 'DELETE'\r\n        }).then(response => setBookInformation(null))\r\n        setConfirmDelete(false)\r\n    }\r\n\r\n    function openBookInfo (book) {\r\n        setActiveBook(book)\r\n        setBookInformation(<BookInformation book={book}/>)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/books/publications?title=${props.book.Title}&authors=${props.book.Authors}`)\r\n            .then(response => response.json())\r\n            .then(data => setPublications(data));\r\n    }, [props.book, bookInformation]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader\r\n                left={bookInformation ? <PanelHeaderBack onClick={() => setBookInformation(null)}/> : null}\r\n                right={bookInformation ?\r\n                        confirmDelete ?\r\n                            <>\r\n                                <PanelHeaderClose onClick={() => setConfirmDelete(false)}/>\r\n                                <PanelHeaderSubmit onClick={deleteBook}/>\r\n                            </> :\r\n                                <PanelHeaderButton onClick={() => setConfirmDelete(true)}>\r\n                                    Удалить\r\n                                </PanelHeaderButton> :\r\n                        null}\r\n            >{bookInformation ? 'Информация о книге' :  'Пункты с данной книгой в наличии' }</ModalPageHeader>\r\n            {publications ?\r\n            bookInformation ??\r\n            <Publications \r\n                userIsAdmin={userIsAdmin} \r\n                publications={publications} \r\n                openBookInfo={openBookInfo}\r\n                openLibraryPointInfo={props.openLibraryPointInfo} \r\n            /> : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, InfoRow } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Book } from '../../../ModalPages/BooksModalPages/RenderBooksList';\r\n\r\nconst ReadersList = ({ readers }) => {\r\n    return (\r\n        <Group>\r\n            {readers.map(reader => <SimpleCell disabled multiline>\r\n                <InfoRow key={reader.Id} header={`ID: ${reader.Id}, ${reader.Role}`}>{reader.Surname} {reader.Name}</InfoRow>\r\n            </SimpleCell>)}\r\n        </Group>\r\n    );\r\n};\r\n\r\nexport const BooksList = ({books}) => (\r\n    <Group>\r\n        {books.map(book => <Book book={book} key={book.Id} indicator={`Заказов: ${book.Taken}`}/>)}\r\n    </Group>\r\n)\r\n\r\nexport const AdditionalLibraryPointInfo = props => {\r\n    const [readers, setReaders] = useState(null);\r\n    const [ordersTop, setOrdersTop] = useState(null);\r\n    const [currentList, setCurrentList] = useState(null);\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + `/library/${props.point.Name}/readers`)\r\n        .then(response => response.json())\r\n        .then(data => setReaders(data))\r\n        .catch(error => console.error(error)),\r\n        [props.point]\r\n    );\r\n\r\n    useEffect(() => fetch(process.env.REACT_APP_API_HOST + '/books/orders/top?param=library_point&param_name=' + props.point.Name)\r\n    .then(response => response.json())\r\n    .then(data => setOrdersTop(data)), [props.point]\r\n    )\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>{props.point.Name}</ModalPageHeader>\r\n                <Group>\r\n                    {readers ? <SimpleCell disabled={readers.count === 0} onClick={() => setCurrentList(<ReadersList readers={readers.data} />)} indicator={readers.count}>Открыть список читателей</SimpleCell> : null}\r\n                    {ordersTop ? <SimpleCell disabled={ordersTop.count === 0} onClick={() => setCurrentList(<BooksList books={ordersTop.data}/>)}  indicator={ordersTop.count}>Посмотреть топ заказов</SimpleCell> : null}\r\n                </Group>\r\n                {currentList ?? null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalPageHeader, Group, SimpleCell, PanelHeaderBack, PanelSpinner, FormLayout, Placeholder } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FormButton from '../../../../CustomComponents/FormComponents/FormButton';\r\n\r\nfunction reserveBook(book, point, user, setPlaceholder) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/' + point.Name + '/reserve', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            bookId: book.Id,\r\n            libraryPoint: point.Name,\r\n            readerId: user.Id,\r\n        })\r\n    })\r\n    .then(response => setPlaceholder(\r\n        response.ok ? <Placeholder header='Экземпляр зарезервирован'/> :\r\n        <Placeholder header='Ошибка при резерве, попробуйте позже'/>)\r\n    )\r\n}\r\n\r\nconst ReserveBookForm = ({ book, point, user, onReserveBook }) => {\r\n    return (\r\n        <Group>\r\n            <SimpleCell disabled description='Название пункта'>{point.Name}</SimpleCell>\r\n            <SimpleCell disabled description='Название книги'>{book.Title}</SimpleCell>\r\n            <SimpleCell disabled description='Авторы'>{book.Authors}</SimpleCell>\r\n            <SimpleCell disabled indicator={book.Available}>Доступно книг</SimpleCell>\r\n            <FormLayout>\r\n                <FormButton\r\n                    stretched\r\n                    mode='primary'\r\n                    disabled={!point.Can_issue_books || user.Role === 'Абитуриент'}\r\n                    onClick={onReserveBook}\r\n                    size='l'\r\n                    text={point.Can_issue_books ?\r\n                        user.Role === 'Абитуриент' ?\r\n                            'Вы не можете резервировать книги' :\r\n                            'Зарезервировать экземпляр'\r\n                        : 'Пункт не может выдавать книги'} />\r\n            </FormLayout>\r\n        </Group>\r\n    );\r\n};\r\nexport const LibraryPointModalPage = props => {\r\n    const [point, setPoint] = useState(null);\r\n    const [placeholder, setPlaceholder] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_HOST + `/library/${props.libraryPoint}`)\r\n            .then(response => response.json())\r\n            .then(({ data }) => setPoint(data[0]))\r\n            .catch(error => console.error(error));\r\n    }, [props.libraryPoint]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal('bookInfo')}>\r\n            <ModalPageHeader left={<PanelHeaderBack onClick={() => props.setActiveModal('bookInfo')} />}>Информация о библиотечном пункте</ModalPageHeader>\r\n            {placeholder ? placeholder :\r\n                <Group>\r\n                    {point ?\r\n                    <ReserveBookForm\r\n                        book={props.book} point={point}\r\n                        user={props.user} \r\n                        onReserveBook={() => reserveBook(props.book, point, props.user, setPlaceholder)}/> :\r\n                    <PanelSpinner size={56} />}\r\n                </Group>\r\n            }\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPageHeader, ModalPage } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BooksList } from './AdditionalLibraryPointInfo';\r\nimport StructureSelect from '../../AdminContent/ReaderListContent/FilterQuery/Selects/StructureSelect';\r\nimport FormInput from '../../../../CustomComponents/FormComponents/FormInput';\r\n\r\nexport const BooksOrdersTop = props => {\r\n    const [faculty, setFaculty] = useState('');\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + '/books/orders/top?param=' + (faculty !== '' ? 'faculty' : ' ') + '&param_name=' + faculty)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [faculty]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Топ книг по вузу и факультетам</ModalPageHeader>\r\n            <StructureSelect faculty={faculty} setFaculty={setFaculty} facultyOnly />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\nexport const BooksOrderPeriod = props => {\r\n    const [period, setPeriod] = useState(31);\r\n    const [top, setTop] = useState(null);\r\n\r\n    useEffect(() => fetch(\r\n        process.env.REACT_APP_API_HOST + `/books/orders?order_period=${period}`)\r\n        .then(response => response.json())\r\n        .then(data => setTop(<BooksList books={data.data} />)),\r\n        [period]);\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={() => props.setActiveModal(null)}>\r\n            <ModalPageHeader>Заказанные книги за период в днях: {period}</ModalPageHeader>\r\n            <FormInput value={period} onChange={setPeriod} placeholder='Период заказов, в днях' type='number' required />\r\n            {top ? top : null}\r\n        </ModalPage>\r\n    );\r\n};\r\n","import { ModalPage, ModalRoot, ModalPageHeader, SimpleCell, PanelSpinner, Group } from '@vkontakte/vkui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport UserInformationModalPage from '../../../ModalPages/UserInforamtionModal'\r\nimport AdminAddBookModalPage from './AdminAddBookModalPage'\r\nimport { BookInfoModalPage } from './Publication'\r\nimport { AdditionalLibraryPointInfo } from './AdditionalLibraryPointInfo'\r\nimport { LibraryPointModalPage } from './ReserveBookForm'\r\nimport { BooksOrdersTop, BooksOrderPeriod } from './BooksOrdersTop'\r\n\r\nfunction fetchStat(stat_kind, set) {\r\n    fetch(process.env.REACT_APP_API_HOST + '/library/statistics?stat_kind=' + stat_kind)\r\n    .then(response => response.json())\r\n    .then(data => set(data))\r\n}\r\n\r\nconst Buttons = props =>  (\r\n    <Group>\r\n        <SimpleCell onClick={() => props.setList(props.minReaders)} indicator={props.minReaders?.count}>Пункты с минимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxReaders)} indicator={props.maxReaders?.count}>Пункты с максимальным числом читателей</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.minDebits)} indicator={props.minDebits?.count}>Пункты с минимальным числом задолжников</SimpleCell>\r\n        <SimpleCell onClick={() => props.setList(props.maxDebits)} indicator={props.maxDebits?.count}>Пункты с максимальным числом задолжников</SimpleCell>\r\n    </Group>\r\n)\r\n\r\nconst LibraryStatistics = props => {\r\n    const [minReaders, setMinReaders] = useState(null)\r\n    const [maxReaders, setMaxReaders] = useState(null)\r\n    const [minDebits, setMinDebits] = useState(null)\r\n    const [maxDebits, setMaxDebits] = useState(null)\r\n    const [currentStat, setCurrentStat] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        fetchStat('min_debitors', setMinDebits)\r\n        fetchStat('min_readers', setMinReaders)\r\n        fetchStat('max_debitors', setMaxDebits)\r\n        fetchStat('max_readers', setMaxReaders)\r\n        setLoading(false)\r\n    }\r\n    , [])\r\n\r\n    return (\r\n        <ModalPage id={props.id} onClose={props.onClose}>\r\n            <ModalPageHeader>Статистика по библиотеке</ModalPageHeader>\r\n            {loading ? <PanelSpinner/> : <Buttons setList={setCurrentStat} minReaders={minReaders} maxReaders={maxReaders} minDebits={minDebits} maxDebits={maxDebits}/>}\r\n            {currentStat ? <Group>{currentStat.data.map(el => <SimpleCell key={el.Name} disabled indicator={el?.Readers ?? el?.Debitors}>{el.Name}</SimpleCell>)}</Group> : null}\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nconst PublicModalPages = props => {\r\n    const onClose = () => props.setActiveModal(null)\r\n    return (\r\n        <ModalRoot activeModal={props.activeModal} onClose={onClose}>\r\n            <BookInfoModalPage user={props.user} id='bookInfo' setActiveModal={props.setActiveModal} book={props.book} openLibraryPointInfo={props.openLibraryPointInfo}/>\r\n            <LibraryPointModalPage id='libraryPointInfo' setActiveModal={props.setActiveModal} book={props.book} libraryPoint={props.libraryPoint} user={props.user}/>\r\n            <AdditionalLibraryPointInfo id='additionalLibraryPoint' setActiveModal={props.setActiveModal} point={props.libraryPoint}/>\r\n            <AdminAddBookModalPage id='addBook' setActiveModal={props.setActiveModal}/>\r\n            <UserInformationModalPage id='userInformation' reader={props.user} onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrdersTop id='booksOrdersTop' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <BooksOrderPeriod id='booksOrdersPeriod' onClose={onClose} setActiveModal={props.setActiveModal}/>\r\n            <LibraryStatistics id='statistics' onClose={onClose}/>\r\n        </ModalRoot>\r\n    )\r\n}\r\n\r\nexport default PublicModalPages","import { View } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport LibraryPoints from './LibraryPoints';\r\nimport Books from './Books/Books';\r\nimport PublicModalPages from './PublicModalPages/PublicModalPages';\r\n\r\nconst PublicContent = props => {\r\n    const [book, setBook] = useState(null)\r\n    const [libraryPoint, setLibraryPoint] = useState(null)\r\n    const modal = <PublicModalPages\r\n                        activeModal={props.activeModal} \r\n                        setActiveModal={props.setActiveModal} \r\n                        book={book} \r\n                        libraryPoint={libraryPoint} \r\n                        user={props.user} \r\n                        openLibraryPointInfo={openLibraryPointInfo}\r\n                    />\r\n\r\n    function openBookInfo (book) {\r\n        setBook(book)\r\n        props.setActiveModal('bookInfo')\r\n    }\r\n\r\n    function openLibraryPointInfo(libraryPoint, book) {\r\n        setBook(book)\r\n        setLibraryPoint(libraryPoint)\r\n        props.setActiveModal('libraryPointInfo')\r\n    }\r\n    \r\n    function openPointInfo(point) {\r\n        setLibraryPoint(point)\r\n        props.setActiveModal('additionalLibraryPoint')\r\n    }\r\n\r\n    return (\r\n        <View activePanel={props.activePanel} id={props.id} modal={modal}>\r\n            <Books\r\n            setActiveModal={props.setActiveModal}\r\n                id='publicBooks'\r\n                openBookInfo={openBookInfo}\r\n                user={props.user}\r\n                addBookButtonClick={() => props.setActiveModal('addBook')}\r\n            />\r\n            <LibraryPoints\r\n                openStatistics={() => props.setActiveModal('statistics')}\r\n                id='publicLibraryPoints'\r\n                user={props.user}\r\n                openPointInfo={openPointInfo}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PublicContent","import { Root } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport AdminContent from './AdminContent/AdminContent';\r\nimport PublicContent from './PublicContent/PublicContent';\r\n\r\nconst ContentView = props => {\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Root activeView={props.activeView}>\r\n            <PublicContent\r\n                user={props.user}\r\n                id='publicContent'\r\n                activePanel={props.activePanel}\r\n                activeModal={props.activeModal}\r\n                setActiveModal={props.setActiveModal}\r\n            />\r\n            {userIsAdmin ?\r\n                <AdminContent\r\n                    user={props.user}\r\n                    id='adminContent'\r\n                    activePanel={props.activePanel}\r\n                    activeModal={props.activeModal}\r\n                    setActiveModal={props.setActiveModal}\r\n                /> : null\r\n            }\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default ContentView;","import { Cell } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nconst SideMenuButton = ({panel, activePanel, onClick, cellText, view}) => {\r\n    return (\r\n        <Cell\r\n            key={panel}\r\n            disabled={panel === activePanel}\r\n            style={panel === activePanel ? {\r\n            backgroundColor: \"var(--button_secondary_background)\",\r\n            borderRadius: 8\r\n            } : {}}\r\n            data-view={view}\r\n            data-panel={panel}\r\n            onClick={onClick}\r\n        >\r\n            {cellText}\r\n        </Cell>\r\n    )\r\n}\r\n\r\nexport default SideMenuButton","import { Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport SideMenuButton from '../SideMenuButtons/SideMenuButton'\r\n\r\nconst adminPanels = {\r\n    'adminReaders': 'Читатели',\r\n    'adminDebtors': 'Задолжники'\r\n}\r\n\r\nconst AdminSideButtons = props => (\r\n    <Group mode='plain'>\r\n        {Object.keys(adminPanels).map(panel => <SideMenuButton view='adminContent' key={panel}\r\n            panel={panel} activePanel={props.activePanel}\r\n            onClick={props.onClick} cellText={adminPanels[panel]} />)}\r\n    </Group>\r\n)\r\n\r\nexport default AdminSideButtons","import { Group } from \"@vkontakte/vkui\";\r\nimport SideMenuButton from \"./SideMenuButton\"\r\n\r\nconst publicPanels = {\r\n    'publicBooks': 'Список книг',\r\n    'publicLibraryPoints': 'Библиотечные пункты',\r\n}\r\n\r\nconst PublicSideButtons = ({activePanel, onClick}) => (\r\n    <Group mode='plain'>\r\n    {Object.keys(publicPanels).map(panel => (\r\n        <SideMenuButton\r\n            key={panel}\r\n            panel={panel}\r\n            activePanel={activePanel}\r\n            cellText={publicPanels[panel]}\r\n            onClick={onClick}\r\n            view='publicContent'\r\n        />\r\n        )\r\n    )}\r\n    </Group>\r\n)\r\n\r\nexport default PublicSideButtons;","import { Group } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport AdminSideButtons from '../AdminSideButtons/AdminSideButtons';\r\nimport PublicSideButtons from './PublicSideButtons';\r\n\r\n\r\nconst SideMenuButtons = ({activePanel, onClick, userIsAdmin}) => {\r\n    return (\r\n        <Group mode='plain' separator='auto'>\r\n            <PublicSideButtons activePanel={activePanel} onClick={onClick}/>\r\n            {userIsAdmin ? <AdminSideButtons activePanel={activePanel} onClick={onClick}/> : null} \r\n        </Group>\r\n    )\r\n}\r\n\r\nexport default SideMenuButtons","import { IconButton, SimpleCell, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { Icon24DoorArrowLeftOutline, Icon24UserOutline } from '@vkontakte/icons';\r\n\r\n\r\nconst SideUserInfo = ({user, openUserInfo, onLogout}) => (\r\n    <Group mode='plain' separator='auto'>\r\n        <SimpleCell\r\n            disabled\r\n            multiline\r\n            after={<>\r\n            {openUserInfo ? <IconButton aria-label='Открыть профиль' onClick={openUserInfo}><Icon24UserOutline/></IconButton> : null}\r\n\r\n            <IconButton aria-label='Выход' onClick={onLogout}><Icon24DoorArrowLeftOutline /></IconButton>\r\n            </>}\r\n            description={user.Role}\r\n        >\r\n            {`${user.Surname} ${user.Name}`}\r\n        </SimpleCell>\r\n    </Group>\r\n)\r\n\r\nexport default SideUserInfo;","import React from 'react'\r\nimport {Group, Panel} from '@vkontakte/vkui'\r\nimport SideMenuButtons from './SideMenuButtons/SideMenuButtons'\r\nimport SideUserInfo from './SideUserInfo.js'\r\n\r\nconst SideMenu = props => {\r\n\r\n    const userIsAdmin = props.user.Role === 'Администратор'\r\n\r\n    return (\r\n        <Panel>\r\n            <Group>\r\n                <SideUserInfo user={props.user} openUserInfo={props.openUserInfo} onLogout={props.onLogout}/>\r\n                <SideMenuButtons activePanel={props.activePanel} onClick={props.onClick} userIsAdmin={userIsAdmin}/>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default SideMenu","import { SplitCol, SplitLayout } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport ContentView from './ContentView/ContentView'\r\nimport SideMenu from './SideMenu/SideMenu'\r\n\r\n\r\n\r\nconst Content = props => {\r\n    const [activeView, setActiveView] = useState('publicContent')\r\n    const [activePanel, setActivePanel] = useState('publicBooks')\r\n    const [activeModal, setActiveModal] = useState(null)\r\n\r\n    const go = e => {\r\n        setActiveView(e.currentTarget.dataset.view)\r\n        setActivePanel(e.currentTarget.dataset.panel)\r\n    }\r\n\r\n    // function openUserInfo () {\r\n    //     setActiveModal('userInformation')\r\n    // }\r\n\r\n    return (\r\n        <SplitLayout style={{justifyContent: 'center'}}>\r\n            <SplitCol fixed width='250px' maxWidth='250px'>\r\n                <SideMenu\r\n                    user={props.user}\r\n                    activePanel={activePanel}\r\n                    onClick={go}\r\n                    onLogout={props.onLogout}\r\n                />\r\n            </SplitCol>\r\n            <SplitCol\r\n                animate={false}\r\n                spaced={true}\r\n                width='560px'\r\n                maxWidth='900px'\r\n            >\r\n                <ContentView activeModal={activeModal} setActiveModal={setActiveModal} activePanel={activePanel} activeView={activeView} user={props.user} setActivePanel={setActivePanel}/>\r\n            </SplitCol>\r\n        </SplitLayout>\r\n    )\r\n}\r\n\r\nexport default Content;","import \"@vkontakte/vkui/dist/vkui.css\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport Auth from './Auth/Auth';\r\nimport Content from './Content/Content';\r\n\r\nasync function authUser(username, password) {\r\n    const response = await fetch(process.env.REACT_APP_API_HOST + '/users/auth', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'username': username,\r\n            'password': password\r\n        })\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    return data.data[0]\r\n}\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n    console.log(process.env)\r\n\r\n        fetch(process.env.REACT_APP_API_HOST + '/users/auth', {method: 'GET'})\r\n        .then(response => response.json())\r\n        .then(({data}) => {\r\n            if (data) setUser(data)\r\n        })\r\n    }, [user])\r\n\r\n    const onLogin = (username, password) => authUser(username, password).then(user => setUser(user))\r\n\r\n    const onLogout = () => setUser(null)\r\n\r\n    return (\r\n        user\r\n        ? <Content onLogout={onLogout} user={user}/>\r\n        : <Auth onButtonClick={onLogin} style={{justifyContent: 'center'}}/>\r\n    )\r\n}\r\n\r\nexport default App","import {ConfigProvider, AdaptivityProvider, AppRoot, Platform} from '@vkontakte/vkui'\nimport App from './App/App'\n\nconst AdaptiveApp = () => {\n  return (\n    <ConfigProvider platform={Platform.VKCOM}>\n        <AdaptivityProvider>\n            <AppRoot>\n                <App />\n            </AppRoot>\n        </AdaptivityProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default AdaptiveApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdaptiveApp from './AdaptiveApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AdaptiveApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}